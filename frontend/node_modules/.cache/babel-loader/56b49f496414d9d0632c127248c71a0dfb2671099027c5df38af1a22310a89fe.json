{"ast":null,"code":"var _jsxFileName = \"/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { renderHarry, renderObstacle, renderEnemy, renderBeams } from \"./GameEntities\";\n\n// Game configuration constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG = {\n  GAME_WIDTH: 400,\n  // Width of the game canvas\n  GAME_HEIGHT: 600,\n  // Height of the game canvas\n  PLAYER_W: 48,\n  // Harry's width\n  PLAYER_H: 48,\n  // Harry's height\n  GRAVITY: 0.6,\n  // Gravity force pulling Harry down\n  FLAP_VEL: -8,\n  // Velocity when Harry flaps (negative = up)\n  OBSTACLE_W: 60,\n  // Width of obstacles\n  OBSTACLE_GAP: 220,\n  // Gap between top and bottom obstacles (increased for easier passage)\n  ENEMY_W: 40,\n  // Enemy width\n  ENEMY_H: 40,\n  // Enemy height\n  BEAM_W: 10,\n  // Magic beam width\n  API: \"http://localhost:8000\",\n  // Backend API URL\n  ENEMY_COLORS: [\"#d72631\", \"#006e90\", \"#ffb400\", \"#8f3985\", \"#4ca1af\"],\n  // Random enemy colors\n  ENEMY_NAMES: [\"Dementor\", \"Death Eater\", \"Troll\", \"Acromantula\", \"Werewolf\"] // Random enemy types\n};\n\n// Type definitions for game entities\n// Obstacle with position and height\n// Enemy with position, color, and type\n// Magic beam with position and active state\n\n// Leaderboard entry\n\n// Generate a random obstacle with safe passage guaranteed\nfunction getRandomObstacle(id) {\n  // Make obstacles much smaller for easier passage\n  const safeMin = 10; // Minimum obstacle height\n  const safeMax = CONFIG.GAME_HEIGHT - CONFIG.OBSTACLE_GAP - 10; // Maximum obstacle height\n  const height = Math.floor(Math.random() * (safeMax - safeMin) + safeMin);\n\n  // Ensure gap is always very large for easy passage\n  const minGapSize = CONFIG.PLAYER_H + 60; // Even larger buffer for very easy escape\n\n  // Calculate actual gap size\n  const actualGapSize = CONFIG.OBSTACLE_GAP;\n  if (actualGapSize < minGapSize) {\n    // Adjust height to ensure minimum gap - make it very generous\n    const adjustedHeight = CONFIG.GAME_HEIGHT - CONFIG.OBSTACLE_GAP - minGapSize;\n    return {\n      x: CONFIG.GAME_WIDTH,\n      height: Math.max(safeMin, adjustedHeight),\n      id\n    };\n  }\n  return {\n    x: CONFIG.GAME_WIDTH,\n    height,\n    id\n  };\n}\n\n// Generate a Dementor enemy\nfunction getRandomEnemy(id) {\n  const y = Math.floor(Math.random() * (CONFIG.GAME_HEIGHT - CONFIG.ENEMY_H - 20)) + 10;\n  return {\n    x: CONFIG.GAME_WIDTH,\n    y,\n    color: \"#1a1a1a\",\n    type: \"Dementor\",\n    id\n  };\n}\n\n// Main game component\nexport default function App() {\n  _s();\n  // Game state variables\n  const [playerY, setPlayerY] = useState(CONFIG.GAME_HEIGHT / 2); // Harry's vertical position\n  const [vel, setVel] = useState(0); // Harry's vertical velocity\n  const [obstacles, setObstacles] = useState([getRandomObstacle(0)]); // Array of obstacles\n  const [enemies, setEnemies] = useState([]); // Array of enemies\n  const [beams, setBeams] = useState([]); // Array of magic beams\n  const [score, setScore] = useState(0); // Current score\n  const [running, setRunning] = useState(false); // Whether game is running\n  const [gameOver, setGameOver] = useState(false); // Whether game is over\n  const [name, setName] = useState(\"\"); // Player name for leaderboard\n  const [leaderboard, setLeaderboard] = useState([]); // Leaderboard data\n\n  // Refs for generating unique IDs\n  const obstacleId = useRef(1);\n  const enemyId = useRef(1);\n\n  // Main game loop - runs every 24ms when game is running\n  useEffect(() => {\n    if (!running) return;\n    const interval = setInterval(() => {\n      // Apply gravity to Harry's velocity (capped at 10)\n      setVel(v => Math.min(v + CONFIG.GRAVITY, 10));\n      // Update Harry's position based on velocity, keeping him within screen bounds\n      setPlayerY(y => Math.max(0, Math.min(CONFIG.GAME_HEIGHT - CONFIG.PLAYER_H, y + vel)));\n      // Increment score\n      setScore(s => s + 1);\n\n      // Move obstacles left and spawn new ones\n      setObstacles(obs => {\n        let nobs = obs.map(o => ({\n          ...o,\n          x: o.x - 3\n        })); // Slower obstacle movement (was 4, now 3)\n        // Spawn new obstacle if none exist or last one is far enough\n        if (!gameOver && (nobs.length === 0 || nobs[nobs.length - 1].x < CONFIG.GAME_WIDTH - 200)) {\n          nobs.push(getRandomObstacle(obstacleId.current++));\n        }\n        // Remove obstacles that have moved off screen\n        return nobs.filter(o => o.x + CONFIG.OBSTACLE_W > 0);\n      });\n\n      // Move enemies left and spawn new ones\n      setEnemies(enms => {\n        let nenms = enms.map(e => ({\n          ...e,\n          x: e.x - 5\n        }));\n        // Spawn new enemy with reduced probability (0.985 = 1.5% chance per frame)\n        if (Math.random() > 0.985) {\n          // Reduced spawn rate from 0.97 to 0.985\n          nenms.push(getRandomEnemy(enemyId.current++));\n        }\n        // Remove enemies that have moved off screen\n        return nenms.filter(e => e.x + CONFIG.ENEMY_W > 0);\n      });\n\n      // Move active beams right and remove off-screen beams\n      setBeams(bs => bs.filter(b => b.active && b.x < CONFIG.GAME_WIDTH).map(b => ({\n        ...b,\n        x: b.x + 16\n      }))); // Faster beam speed\n    }, 24);\n    return () => clearInterval(interval);\n  }, [vel, running, gameOver]);\n\n  // Controls and input handling\n  useEffect(() => {\n    if (!running) return;\n\n    // Function to make Harry flap (jump up)\n    const flap = () => setVel(CONFIG.FLAP_VEL);\n\n    // Function to cast a magic beam\n    const cast = () => setBeams(bs => [...bs, {\n      x: 30 + CONFIG.PLAYER_W,\n      y: playerY + CONFIG.PLAYER_H / 2 - 4,\n      active: true\n    }]);\n\n    // Keyboard event handler\n    const onKey = e => {\n      // Prevent page scrolling for arrow keys when game is running\n      if (e.key === \"ArrowLeft\" || e.key === \"ArrowRight\" || e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n        e.preventDefault();\n      }\n\n      // Space bar: flap (prevent default to stop page scroll)\n      if (e.code === \"Space\") {\n        e.preventDefault();\n        flap();\n      }\n      // A key: cast magic beam\n      if (e.key === \"a\" || e.key === \"A\") cast();\n      // Up arrow: also flap\n      if (e.key === \"ArrowUp\") setVel(CONFIG.FLAP_VEL);\n    };\n\n    // Add event listeners\n    window.addEventListener(\"keydown\", onKey);\n    window.addEventListener(\"mousedown\", flap); // Click to flap\n    window.addEventListener(\"touchstart\", flap); // Touch to flap\n\n    // Cleanup event listeners\n    return () => {\n      window.removeEventListener(\"keydown\", onKey);\n      window.removeEventListener(\"mousedown\", flap);\n      window.removeEventListener(\"touchstart\", flap);\n    };\n  }, [playerY, running]);\n\n  // Collision detection and game over conditions\n  useEffect(() => {\n    if (!running) return;\n\n    // Calculate Harry's bounding box\n    const harryTop = playerY,\n      harryBot = playerY + CONFIG.PLAYER_H,\n      harryLeft = 30,\n      harryRight = 30 + CONFIG.PLAYER_W;\n\n    // Check collision with obstacles\n    for (const obs of obstacles) {\n      // More forgiving obstacle collision - add small buffer\n      if (obs.x < harryRight + 3 && obs.x + CONFIG.OBSTACLE_W > harryLeft - 3 && (harryTop < obs.height - 3 || harryBot > obs.height + CONFIG.OBSTACLE_GAP + 3)) {\n        setRunning(false);\n        setGameOver(true);\n      }\n    }\n\n    // Check collision with enemies\n    for (const enemy of enemies) {\n      // Slightly more forgiving collision detection - add small buffer\n      if (enemy.x < harryRight + 2 && enemy.x + CONFIG.ENEMY_W > harryLeft - 2 && enemy.y < harryBot + 2 && enemy.y + CONFIG.ENEMY_H > harryTop - 2) {\n        setRunning(false);\n        setGameOver(true);\n      }\n    }\n\n    // Check beam-to-enemy collisions and remove hit enemies\n    setBeams(bs => {\n      const newBeams = [...bs];\n      setEnemies(enms => enms.filter(enemy => {\n        let hit = false;\n        for (let i = 0; i < newBeams.length; i++) {\n          const beam = newBeams[i];\n          // Check if beam hits enemy (with generous hit detection)\n          if (beam.active && beam.y > enemy.y - 5 && beam.y < enemy.y + CONFIG.ENEMY_H + 5 && beam.x + CONFIG.BEAM_W > enemy.x - 5 && beam.x < enemy.x + CONFIG.ENEMY_W + 5) {\n            hit = true;\n            newBeams[i] = {\n              ...beam,\n              active: false\n            };\n            break;\n          }\n        }\n        return !hit; // Keep enemy if not hit\n      }));\n      return newBeams;\n    });\n\n    // Check if Harry hits top or bottom of screen\n    if (playerY <= 0 || playerY + CONFIG.PLAYER_H >= CONFIG.GAME_HEIGHT) {\n      setRunning(false);\n      setGameOver(true);\n    }\n  }, [playerY, obstacles, enemies, beams, running]);\n\n  // Fetch leaderboard when game ends\n  useEffect(() => {\n    fetch(`${CONFIG.API}/leaderboard`).then(res => res.json()).then(setLeaderboard).catch(() => setLeaderboard([]));\n  }, [gameOver]);\n\n  // Reset game state and start new game\n  function startGame() {\n    setPlayerY(CONFIG.GAME_HEIGHT / 2); // Reset Harry to center\n    setVel(0); // Reset velocity\n    setObstacles([getRandomObstacle(0)]); // Start with one obstacle\n    setEnemies([]); // Clear enemies\n    setBeams([]); // Clear beams\n    setScore(0); // Reset score\n    setGameOver(false); // Reset game over state\n    setRunning(true); // Start the game\n    obstacleId.current = 1; // Reset obstacle ID counter\n    enemyId.current = 1; // Reset enemy ID counter\n  }\n\n  // Submit score to leaderboard\n  function submitScore() {\n    fetch(`${CONFIG.API}/submit`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name || \"HarryPotterFan\",\n        score\n      })\n    }).then(() => fetch(`${CONFIG.API}/leaderboard`)).then(res => res.json()).then(setLeaderboard);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"serif\",\n      background: \"#1c1746\",\n      minHeight: \"100vh\",\n      color: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#f3ce13\",\n        margin: 0,\n        padding: \"16px 0\",\n        fontFamily: \"Harry Potter, serif\"\n      },\n      children: \"Harry Potter: Broomstick Blitz!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: CONFIG.GAME_WIDTH,\n      height: CONFIG.GAME_HEIGHT,\n      style: {\n        background: \"#222d45\",\n        border: \"4px solid #665f51\"\n      },\n      children: [[...Array(24)].map((_, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: Math.random() * CONFIG.GAME_WIDTH,\n        cy: Math.random() * CONFIG.GAME_HEIGHT,\n        r: 1.2,\n        fill: \"white\",\n        opacity: \"0.5\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)), obstacles.map(o => renderObstacle(o, CONFIG.OBSTACLE_W, CONFIG.OBSTACLE_GAP, CONFIG.GAME_HEIGHT)), enemies.map(e => renderEnemy(e, CONFIG.ENEMY_W, CONFIG.ENEMY_H)), renderBeams(beams), renderHarry(playerY, beams, CONFIG.PLAYER_W, CONFIG.PLAYER_H)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), !running && (gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: 4\n        },\n        placeholder: \"Your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitScore,\n        children: \"Submit Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: leaderboard.map((entry, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.name, \": \", entry.score]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Space/click/tap to flap \\xB7 \\\"A\\\" to cast spell beam \\xB7 Dodge obstacles/monsters!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lLpMz+0oBtKgCzfGrmIDr+qYRlA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","renderHarry","renderObstacle","renderEnemy","renderBeams","jsxDEV","_jsxDEV","CONFIG","GAME_WIDTH","GAME_HEIGHT","PLAYER_W","PLAYER_H","GRAVITY","FLAP_VEL","OBSTACLE_W","OBSTACLE_GAP","ENEMY_W","ENEMY_H","BEAM_W","API","ENEMY_COLORS","ENEMY_NAMES","getRandomObstacle","id","safeMin","safeMax","height","Math","floor","random","minGapSize","actualGapSize","adjustedHeight","x","max","getRandomEnemy","y","color","type","App","_s","playerY","setPlayerY","vel","setVel","obstacles","setObstacles","enemies","setEnemies","beams","setBeams","score","setScore","running","setRunning","gameOver","setGameOver","name","setName","leaderboard","setLeaderboard","obstacleId","enemyId","interval","setInterval","v","min","s","obs","nobs","map","o","length","push","current","filter","enms","nenms","e","bs","b","active","clearInterval","flap","cast","onKey","key","preventDefault","code","window","addEventListener","removeEventListener","harryTop","harryBot","harryLeft","harryRight","enemy","newBeams","hit","i","beam","fetch","then","res","json","catch","startGame","submitScore","method","headers","body","JSON","stringify","style","textAlign","fontFamily","background","minHeight","children","margin","padding","fileName","_jsxFileName","lineNumber","columnNumber","width","border","Array","_","cx","cy","r","fill","opacity","placeholder","value","onChange","target","onClick","entry","_c","$RefreshReg$"],"sources":["/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { renderHarry, renderObstacle, renderEnemy, renderBeams } from \"./GameEntities\";\n\n// Game configuration constants\nconst CONFIG = {\n  GAME_WIDTH: 400,           // Width of the game canvas\n  GAME_HEIGHT: 600,          // Height of the game canvas\n  PLAYER_W: 48,              // Harry's width\n  PLAYER_H: 48,              // Harry's height\n  GRAVITY: 0.6,              // Gravity force pulling Harry down\n  FLAP_VEL: -8,              // Velocity when Harry flaps (negative = up)\n  OBSTACLE_W: 60,            // Width of obstacles\n  OBSTACLE_GAP: 220,         // Gap between top and bottom obstacles (increased for easier passage)\n  ENEMY_W: 40,               // Enemy width\n  ENEMY_H: 40,               // Enemy height\n  BEAM_W: 10,                // Magic beam width\n  API: \"http://localhost:8000\", // Backend API URL\n  ENEMY_COLORS: [\"#d72631\", \"#006e90\", \"#ffb400\", \"#8f3985\", \"#4ca1af\"], // Random enemy colors\n  ENEMY_NAMES: [\"Dementor\", \"Death Eater\", \"Troll\", \"Acromantula\", \"Werewolf\"] // Random enemy types\n};\n\n// Type definitions for game entities\ntype Obstacle = { x: number; height: number; id: number }; // Obstacle with position and height\ntype Enemy = { x: number; y: number; color: string; type: string; id: number }; // Enemy with position, color, and type\ntype Beam = { x: number; y: number; active: boolean }; // Magic beam with position and active state\ntype ScoreEntry = { name: string; score: number }; // Leaderboard entry\n\n// Generate a random obstacle with safe passage guaranteed\nfunction getRandomObstacle(id: number): Obstacle {\n  // Make obstacles much smaller for easier passage\n  const safeMin = 10; // Minimum obstacle height\n  const safeMax = CONFIG.GAME_HEIGHT - CONFIG.OBSTACLE_GAP - 10; // Maximum obstacle height\n  const height = Math.floor(Math.random() * (safeMax - safeMin) + safeMin);\n  \n  // Ensure gap is always very large for easy passage\n  const minGapSize = CONFIG.PLAYER_H + 60; // Even larger buffer for very easy escape\n  \n  // Calculate actual gap size\n  const actualGapSize = CONFIG.OBSTACLE_GAP;\n  \n  if (actualGapSize < minGapSize) {\n    // Adjust height to ensure minimum gap - make it very generous\n    const adjustedHeight = CONFIG.GAME_HEIGHT - CONFIG.OBSTACLE_GAP - minGapSize;\n    return { x: CONFIG.GAME_WIDTH, height: Math.max(safeMin, adjustedHeight), id };\n  }\n  \n  return { x: CONFIG.GAME_WIDTH, height, id };\n}\n\n// Generate a Dementor enemy\nfunction getRandomEnemy(id: number): Enemy {\n  const y = Math.floor(Math.random() * (CONFIG.GAME_HEIGHT - CONFIG.ENEMY_H - 20)) + 10;\n  return { x: CONFIG.GAME_WIDTH, y, color: \"#1a1a1a\", type: \"Dementor\", id };\n}\n\n// Main game component\nexport default function App() {\n  // Game state variables\n  const [playerY, setPlayerY] = useState(CONFIG.GAME_HEIGHT / 2); // Harry's vertical position\n  const [vel, setVel] = useState(0); // Harry's vertical velocity\n  const [obstacles, setObstacles] = useState([getRandomObstacle(0)]); // Array of obstacles\n  const [enemies, setEnemies] = useState<Enemy[]>([]); // Array of enemies\n  const [beams, setBeams] = useState<Beam[]>([]); // Array of magic beams\n  const [score, setScore] = useState(0); // Current score\n  const [running, setRunning] = useState(false); // Whether game is running\n  const [gameOver, setGameOver] = useState(false); // Whether game is over\n  const [name, setName] = useState(\"\"); // Player name for leaderboard\n  const [leaderboard, setLeaderboard] = useState<ScoreEntry[]>([]); // Leaderboard data\n\n  // Refs for generating unique IDs\n  const obstacleId = useRef(1);\n  const enemyId = useRef(1);\n\n  // Main game loop - runs every 24ms when game is running\n  useEffect(() => {\n    if (!running) return;\n    const interval = setInterval(() => {\n      // Apply gravity to Harry's velocity (capped at 10)\n      setVel(v => Math.min(v + CONFIG.GRAVITY, 10));\n      // Update Harry's position based on velocity, keeping him within screen bounds\n      setPlayerY(y => Math.max(0, Math.min(CONFIG.GAME_HEIGHT - CONFIG.PLAYER_H, y + vel)));\n      // Increment score\n      setScore(s => s + 1);\n      \n      // Move obstacles left and spawn new ones\n      setObstacles(obs => {\n        let nobs = obs.map(o => ({ ...o, x: o.x - 3 })); // Slower obstacle movement (was 4, now 3)\n        // Spawn new obstacle if none exist or last one is far enough\n        if (!gameOver && (nobs.length === 0 || nobs[nobs.length - 1].x < CONFIG.GAME_WIDTH - 200)) {\n          nobs.push(getRandomObstacle(obstacleId.current++));\n        }\n        // Remove obstacles that have moved off screen\n        return nobs.filter(o => o.x + CONFIG.OBSTACLE_W > 0);\n      });\n      \n      // Move enemies left and spawn new ones\n      setEnemies(enms => {\n        let nenms = enms.map(e => ({ ...e, x: e.x - 5 }));\n        // Spawn new enemy with reduced probability (0.985 = 1.5% chance per frame)\n        if (Math.random() > 0.985) { // Reduced spawn rate from 0.97 to 0.985\n          nenms.push(getRandomEnemy(enemyId.current++));\n        }\n        // Remove enemies that have moved off screen\n        return nenms.filter(e => e.x + CONFIG.ENEMY_W > 0);\n      });\n      \n      // Move active beams right and remove off-screen beams\n      setBeams(bs => bs.filter(b => b.active && b.x < CONFIG.GAME_WIDTH).map(b => ({ ...b, x: b.x + 16 }))); // Faster beam speed\n    }, 24);\n    return () => clearInterval(interval);\n  }, [vel, running, gameOver]);\n\n  // Controls and input handling\n  useEffect(() => {\n    if (!running) return;\n    \n    // Function to make Harry flap (jump up)\n    const flap = () => setVel(CONFIG.FLAP_VEL);\n    \n    // Function to cast a magic beam\n    const cast = () => setBeams(bs => [...bs, { x: 30 + CONFIG.PLAYER_W, y: playerY + CONFIG.PLAYER_H / 2 - 4, active: true }]);\n    \n    // Keyboard event handler\n    const onKey = (e: KeyboardEvent) => {\n      // Prevent page scrolling for arrow keys when game is running\n      if (e.key === \"ArrowLeft\" || e.key === \"ArrowRight\" || e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n        e.preventDefault();\n      }\n      \n      // Space bar: flap (prevent default to stop page scroll)\n      if (e.code === \"Space\") { e.preventDefault(); flap(); }\n      // A key: cast magic beam\n      if (e.key === \"a\" || e.key === \"A\") cast();\n      // Up arrow: also flap\n      if (e.key === \"ArrowUp\") setVel(CONFIG.FLAP_VEL);\n    };\n    \n    // Add event listeners\n    window.addEventListener(\"keydown\", onKey);\n    window.addEventListener(\"mousedown\", flap); // Click to flap\n    window.addEventListener(\"touchstart\", flap); // Touch to flap\n    \n    // Cleanup event listeners\n    return () => {\n      window.removeEventListener(\"keydown\", onKey);\n      window.removeEventListener(\"mousedown\", flap);\n      window.removeEventListener(\"touchstart\", flap);\n    };\n  }, [playerY, running]);\n\n  // Collision detection and game over conditions\n  useEffect(() => {\n    if (!running) return;\n    \n    // Calculate Harry's bounding box\n    const harryTop = playerY, harryBot = playerY + CONFIG.PLAYER_H, harryLeft = 30, harryRight = 30 + CONFIG.PLAYER_W;\n    \n    // Check collision with obstacles\n    for (const obs of obstacles) {\n      // More forgiving obstacle collision - add small buffer\n      if (obs.x < harryRight + 3 && obs.x + CONFIG.OBSTACLE_W > harryLeft - 3 && (harryTop < obs.height - 3 || harryBot > obs.height + CONFIG.OBSTACLE_GAP + 3)) {\n        setRunning(false); setGameOver(true);\n      }\n    }\n    \n    // Check collision with enemies\n    for (const enemy of enemies) {\n      // Slightly more forgiving collision detection - add small buffer\n      if (enemy.x < harryRight + 2 && enemy.x + CONFIG.ENEMY_W > harryLeft - 2 && enemy.y < harryBot + 2 && enemy.y + CONFIG.ENEMY_H > harryTop - 2) {\n        setRunning(false); setGameOver(true);\n      }\n    }\n    \n    // Check beam-to-enemy collisions and remove hit enemies\n    setBeams(bs => {\n      const newBeams = [...bs];\n      setEnemies(enms => enms.filter(enemy => {\n        let hit = false;\n        for (let i = 0; i < newBeams.length; i++) {\n          const beam = newBeams[i];\n          // Check if beam hits enemy (with generous hit detection)\n          if (beam.active && beam.y > enemy.y - 5 && beam.y < enemy.y + CONFIG.ENEMY_H + 5 && beam.x + CONFIG.BEAM_W > enemy.x - 5 && beam.x < enemy.x + CONFIG.ENEMY_W + 5) {\n            hit = true; newBeams[i] = { ...beam, active: false }; break;\n          }\n        }\n        return !hit; // Keep enemy if not hit\n      }));\n      return newBeams;\n    });\n    \n    // Check if Harry hits top or bottom of screen\n    if (playerY <= 0 || playerY + CONFIG.PLAYER_H >= CONFIG.GAME_HEIGHT) { \n      setRunning(false); setGameOver(true); \n    }\n  }, [playerY, obstacles, enemies, beams, running]);\n\n  // Fetch leaderboard when game ends\n  useEffect(() => {\n    fetch(`${CONFIG.API}/leaderboard`)\n      .then(res => res.json())\n      .then(setLeaderboard)\n      .catch(() => setLeaderboard([]));\n  }, [gameOver]);\n\n  // Reset game state and start new game\n  function startGame() {\n    setPlayerY(CONFIG.GAME_HEIGHT / 2); // Reset Harry to center\n    setVel(0); // Reset velocity\n    setObstacles([getRandomObstacle(0)]); // Start with one obstacle\n    setEnemies([]); // Clear enemies\n    setBeams([]); // Clear beams\n    setScore(0); // Reset score\n    setGameOver(false); // Reset game over state\n    setRunning(true); // Start the game\n    obstacleId.current = 1; // Reset obstacle ID counter\n    enemyId.current = 1; // Reset enemy ID counter\n  }\n\n  // Submit score to leaderboard\n  function submitScore() {\n    fetch(`${CONFIG.API}/submit`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: name || \"HarryPotterFan\", score }),\n    }).then(() => fetch(`${CONFIG.API}/leaderboard`))\n      .then(res => res.json())\n      .then(setLeaderboard);\n  }\n\n  return (\n    <div style={{ textAlign: \"center\", fontFamily: \"serif\", background: \"#1c1746\", minHeight: \"100vh\", color: \"#fff\" }}>\n      {/* Game title */}\n      <h2 style={{ color: \"#f3ce13\", margin: 0, padding: \"16px 0\", fontFamily: \"Harry Potter, serif\" }}>\n        Harry Potter: Broomstick Blitz!\n      </h2>\n      \n      {/* Game canvas */}\n      <svg width={CONFIG.GAME_WIDTH} height={CONFIG.GAME_HEIGHT} style={{ background: \"#222d45\", border: \"4px solid #665f51\" }}>\n        {/* Background stars */}\n        {[...Array(24)].map((_, i) => (\n          <circle key={i} cx={Math.random()*CONFIG.GAME_WIDTH} cy={Math.random()*CONFIG.GAME_HEIGHT} r={1.2} fill=\"white\" opacity=\"0.5\"/>\n        ))}\n        {/* Render game entities */}\n        {obstacles.map(o => renderObstacle(o, CONFIG.OBSTACLE_W, CONFIG.OBSTACLE_GAP, CONFIG.GAME_HEIGHT))}\n        {enemies.map(e => renderEnemy(e, CONFIG.ENEMY_W, CONFIG.ENEMY_H))}\n        {renderBeams(beams)}\n        {renderHarry(playerY, beams, CONFIG.PLAYER_W, CONFIG.PLAYER_H)}\n      </svg>\n      \n      {/* Score display */}\n      <div>Score: {score}</div>\n      \n      {/* Game controls and game over screen */}\n      {!running && (gameOver ? (\n        <div>\n          <b>Game Over!</b><br />\n          <input style={{ margin: 4 }} placeholder=\"Your name\" value={name} onChange={e => setName(e.target.value)} />\n          <button onClick={submitScore}>Submit Score</button>\n          <button onClick={startGame}>Restart</button>\n        </div>\n      ) : (\n        <button onClick={startGame}>Start Game</button>\n      ))}\n      \n      {/* Leaderboard */}\n      <h3>Leaderboard</h3>\n      <ol>{leaderboard.map((entry, i) => (\n        <li key={i}>{entry.name}: {entry.score}</li>\n      ))}</ol>\n      \n      {/* Game instructions */}\n      <p>Space/click/tap to flap · \"A\" to cast spell beam · Dodge obstacles/monsters!</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}