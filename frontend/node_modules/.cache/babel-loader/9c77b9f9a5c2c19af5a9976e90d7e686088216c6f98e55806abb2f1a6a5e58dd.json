{"ast":null,"code":"var _jsxFileName = \"/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { renderHarry, renderObstacle, renderEnemy, renderBeams } from \"./GameEntities\";\n\n// Game configuration constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG = {\n  GAME_WIDTH: 400,\n  // Width of the game canvas\n  GAME_HEIGHT: 600,\n  // Height of the game canvas\n  PLAYER_W: 48,\n  // Player (Harry) width\n  PLAYER_H: 48,\n  // Player (Harry) height\n  GRAVITY: 0.6,\n  // Gravity force pulling player down\n  FLAP_VEL: -8,\n  // Velocity when player flaps (negative = up)\n  OBSTACLE_W: 60,\n  // Width of obstacles (magic barriers)\n  OBSTACLE_GAP: 180,\n  // Gap between top and bottom obstacles\n  ENEMY_W: 40,\n  // Enemy width\n  ENEMY_H: 40,\n  // Enemy height\n  BEAM_W: 10,\n  // Magic beam width\n  API: \"http://localhost:8000\",\n  // Backend API endpoint\n  ENEMY_COLORS: [\"#d72631\", \"#006e90\", \"#ffb400\", \"#8f3985\", \"#4ca1af\"],\n  // Enemy color palette\n  ENEMY_NAMES: [\"Dementor\", \"Death Eater\", \"Troll\", \"Acromantula\", \"Werewolf\"] // Enemy types\n};\n\n// Type definitions for game entities\n// Magic barriers with gaps\n// Dark creatures\n// Magic spells from Harry's wand\n\n// Leaderboard entries\n\n// Generate a random obstacle (magic barrier) at the right edge of screen\nfunction getRandomObstacle(id) {\n  const min = 50,\n    max = CONFIG.GAME_HEIGHT - CONFIG.OBSTACLE_GAP - 50;\n  return {\n    x: CONFIG.GAME_WIDTH,\n    height: Math.floor(Math.random() * (max - min) + min),\n    id\n  };\n}\n\n// Generate a random enemy creature at the right edge of screen\nfunction getRandomEnemy(id) {\n  const color = CONFIG.ENEMY_COLORS[Math.floor(Math.random() * CONFIG.ENEMY_COLORS.length)];\n  const type = CONFIG.ENEMY_NAMES[Math.floor(Math.random() * CONFIG.ENEMY_NAMES.length)];\n  const y = Math.floor(Math.random() * (CONFIG.GAME_HEIGHT - CONFIG.ENEMY_H - 20)) + 10;\n  return {\n    x: CONFIG.GAME_WIDTH,\n    y,\n    color,\n    type,\n    id\n  };\n}\nexport default function App() {\n  _s();\n  // Game state management\n  const [playerY, setPlayerY] = useState(CONFIG.GAME_HEIGHT / 2); // Harry's vertical position\n  const [vel, setVel] = useState(0); // Harry's vertical velocity\n  const [obstacles, setObstacles] = useState([getRandomObstacle(0)]); // Magic barriers\n  const [enemies, setEnemies] = useState([]); // Dark creatures\n  const [beams, setBeams] = useState([]); // Magic spells\n  const [score, setScore] = useState(0); // Current score\n  const [running, setRunning] = useState(false); // Game running state\n  const [gameOver, setGameOver] = useState(false); // Game over state\n  const [name, setName] = useState(\"\"); // Player name for leaderboard\n  const [leaderboard, setLeaderboard] = useState([]); // High scores\n  const obstacleId = useRef(1); // Counter for obstacle IDs\n  const enemyId = useRef(1); // Counter for enemy IDs\n\n  // Main game loop - runs 24 times per second when game is running\n  useEffect(() => {\n    if (!running) return;\n    const interval = setInterval(() => {\n      // Apply gravity to Harry's velocity (pulls him down)\n      setVel(v => Math.min(v + CONFIG.GRAVITY, 10));\n      // Update Harry's position based on velocity, keeping him within screen bounds\n      setPlayerY(y => Math.max(0, Math.min(CONFIG.GAME_HEIGHT - CONFIG.PLAYER_H, y + vel)));\n      // Increment score each frame\n      setScore(s => s + 1);\n\n      // Move obstacles left and spawn new ones\n      setObstacles(obs => {\n        let nobs = obs.map(o => ({\n          ...o,\n          x: o.x - 4\n        })); // Move obstacles left\n        // Spawn new obstacle if needed (when last one is far enough or no obstacles exist)\n        if (!gameOver && (nobs.length === 0 || nobs[nobs.length - 1].x < CONFIG.GAME_WIDTH - 200)) {\n          nobs.push(getRandomObstacle(obstacleId.current++));\n        }\n        // Remove obstacles that have moved off screen\n        return nobs.filter(o => o.x + CONFIG.OBSTACLE_W > 0);\n      });\n\n      // Move enemies left and spawn new ones randomly\n      setEnemies(enms => {\n        let nenms = enms.map(e => ({\n          ...e,\n          x: e.x - 5\n        })); // Move enemies left\n        // 3% chance each frame to spawn a new enemy\n        if (Math.random() > 0.97) {\n          nenms.push(getRandomEnemy(enemyId.current++));\n        }\n        // Remove enemies that have moved off screen\n        return nenms.filter(e => e.x + CONFIG.ENEMY_W > 0);\n      });\n\n      // Move magic beams right and remove inactive ones\n      setBeams(bs => bs.filter(b => b.active && b.x < CONFIG.GAME_WIDTH).map(b => ({\n        ...b,\n        x: b.x + 12\n      })));\n    }, 24); // ~42 FPS\n    return () => clearInterval(interval);\n  }, [vel, running, gameOver]);\n\n  // Input controls - keyboard, mouse, and touch\n  useEffect(() => {\n    if (!running) return;\n\n    // Make Harry flap (fly up) when space/click/tap\n    const flap = () => setVel(CONFIG.FLAP_VEL);\n\n    // Cast a magic spell (shoot beam) when 'A' is pressed\n    const cast = () => setBeams(bs => [...bs, {\n      x: 30 + CONFIG.PLAYER_W,\n      y: playerY + CONFIG.PLAYER_H / 2 - 4,\n      active: true\n    }]);\n\n    // Handle keyboard input\n    const onKey = e => {\n      if (e.code === \"Space\") {\n        e.preventDefault(); // Prevent page scroll\n        flap();\n      }\n      if (e.key === \"a\" || e.key === \"A\") cast(); // Cast spell\n      if (e.key === \"ArrowUp\") setVel(CONFIG.FLAP_VEL); // Alternative flap control\n    };\n\n    // Add event listeners\n    window.addEventListener(\"keydown\", onKey);\n    window.addEventListener(\"mousedown\", flap); // Click to flap\n    window.addEventListener(\"touchstart\", flap); // Touch to flap\n\n    // Cleanup event listeners\n    return () => {\n      window.removeEventListener(\"keydown\", onKey);\n      window.removeEventListener(\"mousedown\", flap);\n      window.removeEventListener(\"touchstart\", flap);\n    };\n  }, [playerY, running]);\n\n  // Collision detection and game over logic\n  useEffect(() => {\n    if (!running) return;\n\n    // Get Harry's bounding box coordinates\n    const harryTop = playerY,\n      harryBot = playerY + CONFIG.PLAYER_H,\n      harryLeft = 30,\n      harryRight = 30 + CONFIG.PLAYER_W;\n\n    // Check collision with obstacles (magic barriers)\n    for (const obs of obstacles) {\n      if (obs.x < harryRight && obs.x + CONFIG.OBSTACLE_W > harryLeft && (harryTop < obs.height || harryBot > obs.height + CONFIG.OBSTACLE_GAP)) {\n        setRunning(false);\n        setGameOver(true);\n      }\n    }\n\n    // Check collision with enemies (dark creatures)\n    for (const enemy of enemies) {\n      if (enemy.x < harryRight && enemy.x + CONFIG.ENEMY_W > harryLeft && enemy.y < harryBot && enemy.y + CONFIG.ENEMY_H > harryTop) {\n        setRunning(false);\n        setGameOver(true);\n      }\n    }\n\n    // Check beam-to-enemy collisions (magic spells hitting enemies)\n    setBeams(bs => {\n      const newBeams = [...bs];\n      setEnemies(enms => enms.filter(enemy => {\n        let hit = false;\n        for (let i = 0; i < newBeams.length; i++) {\n          const beam = newBeams[i];\n          // Check if beam hits enemy\n          if (beam.active && beam.y > enemy.y && beam.y < enemy.y + CONFIG.ENEMY_H && beam.x + CONFIG.BEAM_W > enemy.x && beam.x < enemy.x + CONFIG.ENEMY_W) {\n            hit = true;\n            newBeams[i] = {\n              ...beam,\n              active: false\n            }; // Deactivate beam\n            break;\n          }\n        }\n        return !hit; // Remove enemy if hit\n      }));\n      return newBeams;\n    });\n\n    // Check if Harry hits top or bottom of screen\n    if (playerY <= 0 || playerY + CONFIG.PLAYER_H >= CONFIG.GAME_HEIGHT) {\n      setRunning(false);\n      setGameOver(true);\n    }\n  }, [playerY, obstacles, enemies, beams, running]);\n\n  // Fetch leaderboard when game ends\n  useEffect(() => {\n    fetch(`${CONFIG.API}/leaderboard`).then(res => res.json()).then(setLeaderboard).catch(() => setLeaderboard([])); // Fallback to empty array if API fails\n  }, [gameOver]);\n\n  // Reset game state and start new game\n  function startGame() {\n    setPlayerY(CONFIG.GAME_HEIGHT / 2); // Start Harry in middle of screen\n    setVel(0); // Reset velocity\n    setObstacles([getRandomObstacle(0)]); // Start with one obstacle\n    setEnemies([]); // Clear all enemies\n    setBeams([]); // Clear all beams\n    setScore(0); // Reset score\n    setGameOver(false); // Clear game over state\n    setRunning(true); // Start the game\n    obstacleId.current = 1; // Reset obstacle ID counter\n    enemyId.current = 1; // Reset enemy ID counter\n  }\n\n  // Submit score to leaderboard\n  function submitScore() {\n    fetch(`${CONFIG.API}/submit`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name || \"HarryPotterFan\",\n        score\n      })\n    }).then(() => fetch(`${CONFIG.API}/leaderboard`)) // Refresh leaderboard after submit\n    .then(res => res.json()).then(setLeaderboard);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"serif\",\n      background: \"#1c1746\",\n      minHeight: \"100vh\",\n      color: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#f3ce13\",\n        margin: 0,\n        padding: \"16px 0\",\n        fontFamily: \"Harry Potter, serif\"\n      },\n      children: \"Harry Potter: Broomstick Blitz!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: CONFIG.GAME_WIDTH,\n      height: CONFIG.GAME_HEIGHT,\n      style: {\n        background: \"#222d45\",\n        border: \"4px solid #665f51\"\n      },\n      children: [[...Array(24)].map((_, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: Math.random() * CONFIG.GAME_WIDTH,\n        cy: Math.random() * CONFIG.GAME_HEIGHT,\n        r: 1.2,\n        fill: \"white\",\n        opacity: \"0.5\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)), obstacles.map(o => renderObstacle(o, CONFIG.OBSTACLE_W, CONFIG.OBSTACLE_GAP, CONFIG.GAME_HEIGHT)), enemies.map(e => renderEnemy(e, CONFIG.ENEMY_W, CONFIG.ENEMY_H)), renderBeams(beams), renderHarry(playerY, beams, CONFIG.PLAYER_W, CONFIG.PLAYER_H)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), !running && (gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: 4\n        },\n        placeholder: \"Your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitScore,\n        children: \"Submit Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: leaderboard.map((entry, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.name, \": \", entry.score]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Space/click/tap to flap \\xB7 \\\"A\\\" to cast spell beam \\xB7 Dodge obstacles/monsters!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lLpMz+0oBtKgCzfGrmIDr+qYRlA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","renderHarry","renderObstacle","renderEnemy","renderBeams","jsxDEV","_jsxDEV","CONFIG","GAME_WIDTH","GAME_HEIGHT","PLAYER_W","PLAYER_H","GRAVITY","FLAP_VEL","OBSTACLE_W","OBSTACLE_GAP","ENEMY_W","ENEMY_H","BEAM_W","API","ENEMY_COLORS","ENEMY_NAMES","getRandomObstacle","id","min","max","x","height","Math","floor","random","getRandomEnemy","color","length","type","y","App","_s","playerY","setPlayerY","vel","setVel","obstacles","setObstacles","enemies","setEnemies","beams","setBeams","score","setScore","running","setRunning","gameOver","setGameOver","name","setName","leaderboard","setLeaderboard","obstacleId","enemyId","interval","setInterval","v","s","obs","nobs","map","o","push","current","filter","enms","nenms","e","bs","b","active","clearInterval","flap","cast","onKey","code","preventDefault","key","window","addEventListener","removeEventListener","harryTop","harryBot","harryLeft","harryRight","enemy","newBeams","hit","i","beam","fetch","then","res","json","catch","startGame","submitScore","method","headers","body","JSON","stringify","style","textAlign","fontFamily","background","minHeight","children","margin","padding","fileName","_jsxFileName","lineNumber","columnNumber","width","border","Array","_","cx","cy","r","fill","opacity","placeholder","value","onChange","target","onClick","entry","_c","$RefreshReg$"],"sources":["/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { renderHarry, renderObstacle, renderEnemy, renderBeams } from \"./GameEntities\";\n\n// Game configuration constants\nconst CONFIG = {\n  GAME_WIDTH: 400,        // Width of the game canvas\n  GAME_HEIGHT: 600,       // Height of the game canvas\n  PLAYER_W: 48,           // Player (Harry) width\n  PLAYER_H: 48,           // Player (Harry) height\n  GRAVITY: 0.6,           // Gravity force pulling player down\n  FLAP_VEL: -8,           // Velocity when player flaps (negative = up)\n  OBSTACLE_W: 60,         // Width of obstacles (magic barriers)\n  OBSTACLE_GAP: 180,      // Gap between top and bottom obstacles\n  ENEMY_W: 40,            // Enemy width\n  ENEMY_H: 40,            // Enemy height\n  BEAM_W: 10,             // Magic beam width\n  API: \"http://localhost:8000\",  // Backend API endpoint\n  ENEMY_COLORS: [\"#d72631\", \"#006e90\", \"#ffb400\", \"#8f3985\", \"#4ca1af\"],  // Enemy color palette\n  ENEMY_NAMES: [\"Dementor\", \"Death Eater\", \"Troll\", \"Acromantula\", \"Werewolf\"]  // Enemy types\n};\n\n// Type definitions for game entities\ntype Obstacle = { x: number; height: number; id: number };  // Magic barriers with gaps\ntype Enemy = { x: number; y: number; color: string; type: string; id: number };  // Dark creatures\ntype Beam = { x: number; y: number; active: boolean };  // Magic spells from Harry's wand\ntype ScoreEntry = { name: string; score: number };  // Leaderboard entries\n\n// Generate a random obstacle (magic barrier) at the right edge of screen\nfunction getRandomObstacle(id: number): Obstacle {\n  const min = 50, max = CONFIG.GAME_HEIGHT - CONFIG.OBSTACLE_GAP - 50;\n  return { x: CONFIG.GAME_WIDTH, height: Math.floor(Math.random() * (max - min) + min), id };\n}\n\n// Generate a random enemy creature at the right edge of screen\nfunction getRandomEnemy(id: number): Enemy {\n  const color = CONFIG.ENEMY_COLORS[Math.floor(Math.random() * CONFIG.ENEMY_COLORS.length)];\n  const type = CONFIG.ENEMY_NAMES[Math.floor(Math.random() * CONFIG.ENEMY_NAMES.length)];\n  const y = Math.floor(Math.random() * (CONFIG.GAME_HEIGHT - CONFIG.ENEMY_H - 20)) + 10;\n  return { x: CONFIG.GAME_WIDTH, y, color, type, id };\n}\n\nexport default function App() {\n  // Game state management\n  const [playerY, setPlayerY] = useState(CONFIG.GAME_HEIGHT / 2);  // Harry's vertical position\n  const [vel, setVel] = useState(0);  // Harry's vertical velocity\n  const [obstacles, setObstacles] = useState([getRandomObstacle(0)]);  // Magic barriers\n  const [enemies, setEnemies] = useState<Enemy[]>([]);  // Dark creatures\n  const [beams, setBeams] = useState<Beam[]>([]);  // Magic spells\n  const [score, setScore] = useState(0);  // Current score\n  const [running, setRunning] = useState(false);  // Game running state\n  const [gameOver, setGameOver] = useState(false);  // Game over state\n  const [name, setName] = useState(\"\");  // Player name for leaderboard\n  const [leaderboard, setLeaderboard] = useState<ScoreEntry[]>([]);  // High scores\n  const obstacleId = useRef(1);  // Counter for obstacle IDs\n  const enemyId = useRef(1);  // Counter for enemy IDs\n\n  // Main game loop - runs 24 times per second when game is running\n  useEffect(() => {\n    if (!running) return;\n    const interval = setInterval(() => {\n      // Apply gravity to Harry's velocity (pulls him down)\n      setVel(v => Math.min(v + CONFIG.GRAVITY, 10));\n      // Update Harry's position based on velocity, keeping him within screen bounds\n      setPlayerY(y => Math.max(0, Math.min(CONFIG.GAME_HEIGHT - CONFIG.PLAYER_H, y + vel)));\n      // Increment score each frame\n      setScore(s => s + 1);\n      \n      // Move obstacles left and spawn new ones\n      setObstacles(obs => {\n        let nobs = obs.map(o => ({ ...o, x: o.x - 4 }));  // Move obstacles left\n        // Spawn new obstacle if needed (when last one is far enough or no obstacles exist)\n        if (!gameOver && (nobs.length === 0 || nobs[nobs.length - 1].x < CONFIG.GAME_WIDTH - 200)) {\n          nobs.push(getRandomObstacle(obstacleId.current++));\n        }\n        // Remove obstacles that have moved off screen\n        return nobs.filter(o => o.x + CONFIG.OBSTACLE_W > 0);\n      });\n      \n      // Move enemies left and spawn new ones randomly\n      setEnemies(enms => {\n        let nenms = enms.map(e => ({ ...e, x: e.x - 5 }));  // Move enemies left\n        // 3% chance each frame to spawn a new enemy\n        if (Math.random() > 0.97) {\n          nenms.push(getRandomEnemy(enemyId.current++));\n        }\n        // Remove enemies that have moved off screen\n        return nenms.filter(e => e.x + CONFIG.ENEMY_W > 0);\n      });\n      \n      // Move magic beams right and remove inactive ones\n      setBeams(bs => bs.filter(b => b.active && b.x < CONFIG.GAME_WIDTH).map(b => ({ ...b, x: b.x + 12 })));\n    }, 24);  // ~42 FPS\n    return () => clearInterval(interval);\n  }, [vel, running, gameOver]);\n\n  // Input controls - keyboard, mouse, and touch\n  useEffect(() => {\n    if (!running) return;\n    \n    // Make Harry flap (fly up) when space/click/tap\n    const flap = () => setVel(CONFIG.FLAP_VEL);\n    \n    // Cast a magic spell (shoot beam) when 'A' is pressed\n    const cast = () => setBeams(bs => [...bs, { x: 30 + CONFIG.PLAYER_W, y: playerY + CONFIG.PLAYER_H / 2 - 4, active: true }]);\n    \n    // Handle keyboard input\n    const onKey = (e: KeyboardEvent) => {\n      if (e.code === \"Space\") { \n        e.preventDefault(); // Prevent page scroll\n        flap(); \n      }\n      if (e.key === \"a\" || e.key === \"A\") cast();  // Cast spell\n      if (e.key === \"ArrowUp\") setVel(CONFIG.FLAP_VEL);  // Alternative flap control\n    };\n    \n    // Add event listeners\n    window.addEventListener(\"keydown\", onKey);\n    window.addEventListener(\"mousedown\", flap);  // Click to flap\n    window.addEventListener(\"touchstart\", flap);  // Touch to flap\n    \n    // Cleanup event listeners\n    return () => {\n      window.removeEventListener(\"keydown\", onKey);\n      window.removeEventListener(\"mousedown\", flap);\n      window.removeEventListener(\"touchstart\", flap);\n    };\n  }, [playerY, running]);\n\n  // Collision detection and game over logic\n  useEffect(() => {\n    if (!running) return;\n    \n    // Get Harry's bounding box coordinates\n    const harryTop = playerY, harryBot = playerY + CONFIG.PLAYER_H, harryLeft = 30, harryRight = 30 + CONFIG.PLAYER_W;\n    \n    // Check collision with obstacles (magic barriers)\n    for (const obs of obstacles) {\n      if (obs.x < harryRight && obs.x + CONFIG.OBSTACLE_W > harryLeft && (harryTop < obs.height || harryBot > obs.height + CONFIG.OBSTACLE_GAP)) {\n        setRunning(false); \n        setGameOver(true);\n      }\n    }\n    \n    // Check collision with enemies (dark creatures)\n    for (const enemy of enemies) {\n      if (enemy.x < harryRight && enemy.x + CONFIG.ENEMY_W > harryLeft && enemy.y < harryBot && enemy.y + CONFIG.ENEMY_H > harryTop) {\n        setRunning(false); \n        setGameOver(true);\n      }\n    }\n    \n    // Check beam-to-enemy collisions (magic spells hitting enemies)\n    setBeams(bs => {\n      const newBeams = [...bs];\n      setEnemies(enms => enms.filter(enemy => {\n        let hit = false;\n        for (let i = 0; i < newBeams.length; i++) {\n          const beam = newBeams[i];\n          // Check if beam hits enemy\n          if (beam.active && beam.y > enemy.y && beam.y < enemy.y + CONFIG.ENEMY_H && beam.x + CONFIG.BEAM_W > enemy.x && beam.x < enemy.x + CONFIG.ENEMY_W) {\n            hit = true; \n            newBeams[i] = { ...beam, active: false };  // Deactivate beam\n            break;\n          }\n        }\n        return !hit;  // Remove enemy if hit\n      }));\n      return newBeams;\n    });\n    \n    // Check if Harry hits top or bottom of screen\n    if (playerY <= 0 || playerY + CONFIG.PLAYER_H >= CONFIG.GAME_HEIGHT) { \n      setRunning(false); \n      setGameOver(true); \n    }\n  }, [playerY, obstacles, enemies, beams, running]);\n\n  // Fetch leaderboard when game ends\n  useEffect(() => {\n    fetch(`${CONFIG.API}/leaderboard`)\n      .then(res => res.json())\n      .then(setLeaderboard)\n      .catch(() => setLeaderboard([]));  // Fallback to empty array if API fails\n  }, [gameOver]);\n\n  // Reset game state and start new game\n  function startGame() {\n    setPlayerY(CONFIG.GAME_HEIGHT / 2);  // Start Harry in middle of screen\n    setVel(0);  // Reset velocity\n    setObstacles([getRandomObstacle(0)]);  // Start with one obstacle\n    setEnemies([]);  // Clear all enemies\n    setBeams([]);  // Clear all beams\n    setScore(0);  // Reset score\n    setGameOver(false);  // Clear game over state\n    setRunning(true);  // Start the game\n    obstacleId.current = 1;  // Reset obstacle ID counter\n    enemyId.current = 1;  // Reset enemy ID counter\n  }\n\n  // Submit score to leaderboard\n  function submitScore() {\n    fetch(`${CONFIG.API}/submit`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: name || \"HarryPotterFan\", score }),\n    }).then(() => fetch(`${CONFIG.API}/leaderboard`))  // Refresh leaderboard after submit\n      .then(res => res.json())\n      .then(setLeaderboard);\n  }\n\n  return (\n    <div style={{ textAlign: \"center\", fontFamily: \"serif\", background: \"#1c1746\", minHeight: \"100vh\", color: \"#fff\" }}>\n      {/* Game title */}\n      <h2 style={{ color: \"#f3ce13\", margin: 0, padding: \"16px 0\", fontFamily: \"Harry Potter, serif\" }}>\n        Harry Potter: Broomstick Blitz!\n      </h2>\n      \n      {/* Main game canvas */}\n      <svg width={CONFIG.GAME_WIDTH} height={CONFIG.GAME_HEIGHT} style={{ background: \"#222d45\", border: \"4px solid #665f51\" }}>\n        {/* Starry background */}\n        {[...Array(24)].map((_, i) => (\n          <circle key={i} cx={Math.random()*CONFIG.GAME_WIDTH} cy={Math.random()*CONFIG.GAME_HEIGHT} r={1.2} fill=\"white\" opacity=\"0.5\"/>\n        ))}\n        {/* Render game entities */}\n        {obstacles.map(o => renderObstacle(o, CONFIG.OBSTACLE_W, CONFIG.OBSTACLE_GAP, CONFIG.GAME_HEIGHT))}\n        {enemies.map(e => renderEnemy(e, CONFIG.ENEMY_W, CONFIG.ENEMY_H))}\n        {renderBeams(beams)}\n        {renderHarry(playerY, beams, CONFIG.PLAYER_W, CONFIG.PLAYER_H)}\n      </svg>\n      \n      {/* Score display */}\n      <div>Score: {score}</div>\n      \n      {/* Game controls and status */}\n      {!running && (gameOver ? (\n        <div>\n          <b>Game Over!</b><br />\n          <input style={{ margin: 4 }} placeholder=\"Your name\" value={name} onChange={e => setName(e.target.value)} />\n          <button onClick={submitScore}>Submit Score</button>\n          <button onClick={startGame}>Restart</button>\n        </div>\n      ) : (\n        <button onClick={startGame}>Start Game</button>\n      ))}\n      \n      {/* Leaderboard */}\n      <h3>Leaderboard</h3>\n      <ol>{leaderboard.map((entry, i) => (\n        <li key={i}>{entry.name}: {entry.score}</li>\n      ))}</ol>\n      \n      {/* Game instructions */}\n      <p>Space/click/tap to flap · \"A\" to cast spell beam · Dodge obstacles/monsters!</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}