{"ast":null,"code":"var _jsxFileName = \"/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WIDTH = 400;\nconst HEIGHT = 600;\nconst PLAYER_W = 40;\nconst PLAYER_H = 40;\nconst OBSTACLE_W = 40;\nconst OBSTACLE_H = 40;\nconst API = \"http://localhost:5000/api\";\nfunction getRandomX() {\n  return Math.floor(Math.random() * (WIDTH - OBSTACLE_W));\n}\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [x, setX] = useState(WIDTH / 2 - PLAYER_W / 2);\n  const [score, setScore] = useState(0);\n  const [obstacles, setObstacles] = useState([{\n    x: getRandomX(),\n    y: 0\n  }]);\n  const [running, setRunning] = useState(true);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [name, setName] = useState(\"\");\n  useEffect(() => {\n    const handler = e => {\n      if (!running) return;\n      if (e.key === \"ArrowLeft\") setX(x => Math.max(0, x - 24));\n      if (e.key === \"ArrowRight\") setX(x => Math.min(WIDTH - PLAYER_W, x + 24));\n    };\n    window.addEventListener(\"keydown\", handler);\n    return () => window.removeEventListener(\"keydown\", handler);\n  }, [running]);\n  useEffect(() => {\n    if (!running) return;\n    const interval = setInterval(() => {\n      setObstacles(obs => {\n        let hit = false;\n        const next = obs.map(o => ({\n          ...o,\n          y: o.y + 8\n        }));\n        const survived = [];\n        for (let o of next) {\n          // Only consider game over if bounding boxes overlap\n          const collided = o.y + OBSTACLE_H > HEIGHT - PLAYER_H &&\n          // obstacle at player's level\n          o.y < HEIGHT &&\n          // still visible\n          o.x < x + PLAYER_W && o.x + OBSTACLE_W > x;\n          if (collided) {\n            hit = true;\n          }\n          // Remove blocks that left the screen (didn't collide)\n          else if (o.y < HEIGHT) {\n            survived.push(o);\n          }\n        }\n        if (hit) {\n          setRunning(false);\n          return obs;\n        }\n        // Add new obstacle as needed\n        if (survived.length === next.length) survived.push({\n          x: getRandomX(),\n          y: 0\n        });\n        setScore(s => s + 1);\n        return survived;\n      });\n    }, 36);\n    return () => clearInterval(interval);\n  }, [x, running]);\n  useEffect(() => {\n    var _canvasRef$current;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext(\"2d\");\n    if (!ctx) return;\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    ctx.fillStyle = \"blue\";\n    ctx.fillRect(x, HEIGHT - PLAYER_H, PLAYER_W, PLAYER_H);\n    ctx.fillStyle = \"red\";\n    obstacles.slice(0, 5).forEach(o => ctx.fillRect(o.x, o.y, OBSTACLE_W, OBSTACLE_H));\n    ctx.fillStyle = \"#222\";\n    ctx.fillText(`Score: ${score}`, 10, 24);\n  });\n  useEffect(() => {\n    fetch(`${API}/leaderboard`).then(res => res.json()).then(data => setLeaderboard(data));\n  }, [running]);\n  const restart = () => {\n    setX(WIDTH / 2 - PLAYER_W / 2);\n    setObstacles([{\n      x: getRandomX(),\n      y: 0\n    }]);\n    setScore(0);\n    setRunning(true);\n  };\n  const submitScore = () => {\n    fetch(`${API}/submit`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name || \"Anonymous\",\n        score\n      })\n    }).then(() => {\n      fetch(`${API}/leaderboard`).then(res => res.json()).then(data => setLeaderboard(data));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Endless Runner Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: WIDTH,\n      height: HEIGHT,\n      style: {\n        border: \"2px solid #888\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: \", score, \" \", running ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), !running && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitScore,\n        children: \"Submit Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: leaderboard.map((entry, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.name, \": \", entry.score]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Use arrow keys to move & dodge red blocks!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 59\n      }, this), \"Only a direct collision ends the game.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 55\n      }, this), \"When you crash, submit your score and try again.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"aCGJDr2jidODntHbyWNb5sreakk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","WIDTH","HEIGHT","PLAYER_W","PLAYER_H","OBSTACLE_W","OBSTACLE_H","API","getRandomX","Math","floor","random","App","_s","canvasRef","x","setX","score","setScore","obstacles","setObstacles","y","running","setRunning","leaderboard","setLeaderboard","name","setName","handler","e","key","max","min","window","addEventListener","removeEventListener","interval","setInterval","obs","hit","next","map","o","survived","collided","push","length","s","clearInterval","_canvasRef$current","ctx","current","getContext","clearRect","fillStyle","fillRect","slice","forEach","fillText","fetch","then","res","json","data","restart","submitScore","method","headers","body","JSON","stringify","style","textAlign","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","border","placeholder","value","onChange","target","onClick","entry","i","_c","$RefreshReg$"],"sources":["/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst WIDTH = 400;\nconst HEIGHT = 600;\nconst PLAYER_W = 40;\nconst PLAYER_H = 40;\nconst OBSTACLE_W = 40;\nconst OBSTACLE_H = 40;\nconst API = \"http://localhost:5000/api\";\n\ntype ScoreEntry = { name: string; score: number };\n\nfunction getRandomX() {\n    return Math.floor(Math.random() * (WIDTH - OBSTACLE_W));\n}\n\nfunction App() {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const [x, setX] = useState(WIDTH / 2 - PLAYER_W / 2);\n    const [score, setScore] = useState(0);\n    const [obstacles, setObstacles] = useState([{ x: getRandomX(), y: 0 }]);\n    const [running, setRunning] = useState(true);\n    const [leaderboard, setLeaderboard] = useState<ScoreEntry[]>([]);\n    const [name, setName] = useState(\"\");\n\n    useEffect(() => {\n        const handler = (e: KeyboardEvent) => {\n            if (!running) return;\n            if (e.key === \"ArrowLeft\") setX(x => Math.max(0, x - 24));\n            if (e.key === \"ArrowRight\") setX(x => Math.min(WIDTH - PLAYER_W, x + 24));\n        };\n        window.addEventListener(\"keydown\", handler);\n        return () => window.removeEventListener(\"keydown\", handler);\n    }, [running]);\n\n    useEffect(() => {\n        if (!running) return;\n        const interval = setInterval(() => {\n            setObstacles(obs => {\n                let hit = false;\n                const next = obs.map(o => ({ ...o, y: o.y + 8 }));\n                const survived = [];\n                for (let o of next) {\n                    // Only consider game over if bounding boxes overlap\n                    const collided =\n                        o.y + OBSTACLE_H > HEIGHT - PLAYER_H && // obstacle at player's level\n                        o.y < HEIGHT && // still visible\n                        o.x < x + PLAYER_W &&\n                        o.x + OBSTACLE_W > x;\n                    if (collided) {\n                        hit = true;\n                    }\n                    // Remove blocks that left the screen (didn't collide)\n                    else if (o.y < HEIGHT) {\n                        survived.push(o);\n                    }\n                }\n                if (hit) {\n                    setRunning(false);\n                    return obs;\n                }\n                // Add new obstacle as needed\n                if (survived.length === next.length) survived.push({ x: getRandomX(), y: 0 });\n                setScore(s => s + 1);\n                return survived;\n            });\n        }, 36);\n        return () => clearInterval(interval);\n    }, [x, running]);\n\n    useEffect(() => {\n        const ctx = canvasRef.current?.getContext(\"2d\");\n        if (!ctx) return;\n        ctx.clearRect(0, 0, WIDTH, HEIGHT);\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(x, HEIGHT - PLAYER_H, PLAYER_W, PLAYER_H);\n        ctx.fillStyle = \"red\";\n        obstacles.slice(0, 5).forEach(o => ctx.fillRect(o.x, o.y, OBSTACLE_W, OBSTACLE_H));\n        ctx.fillStyle = \"#222\";\n        ctx.fillText(`Score: ${score}`, 10, 24);\n    });\n\n    useEffect(() => {\n        fetch(`${API}/leaderboard`)\n            .then(res => res.json())\n            .then(data => setLeaderboard(data));\n    }, [running]);\n\n    const restart = () => {\n        setX(WIDTH / 2 - PLAYER_W / 2);\n        setObstacles([{ x: getRandomX(), y: 0 }]);\n        setScore(0);\n        setRunning(true);\n    };\n\n    const submitScore = () => {\n        fetch(`${API}/submit`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name: name || \"Anonymous\", score }),\n        }).then(() => {\n            fetch(`${API}/leaderboard`)\n                .then(res => res.json())\n                .then(data => setLeaderboard(data));\n        });\n    };\n\n    return (\n        <div style={{ textAlign: \"center\", fontFamily: \"sans-serif\" }}>\n            <h2>Endless Runner Leaderboard</h2>\n            <canvas ref={canvasRef} width={WIDTH} height={HEIGHT} style={{ border: \"2px solid #888\" }} />\n            <div>\n                Score: {score} {running ? null : <span>Game Over!</span>}\n            </div>\n            {!running && (\n                <div>\n                    <input placeholder=\"Your name\" value={name} onChange={e => setName(e.target.value)} />\n                    <button onClick={submitScore}>Submit Score</button>\n                    <button onClick={restart}>Restart</button>\n                </div>\n            )}\n            <h3>Leaderboard</h3>\n            <ol>\n                {leaderboard.map((entry, i) => (\n                    <li key={i}>{entry.name}: {entry.score}</li>\n                ))}\n            </ol>\n            <p>\n                Use arrow keys to move & dodge red blocks!<br />\n                Only a direct collision ends the game.<br />\n                When you crash, submit your score and try again.\n            </p>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}