{"ast":null,"code":"var _jsxFileName = \"/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { renderHarry, renderObstacle, renderEnemy, renderBeams, renderPotion } from \"./GameEntities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CONFIG = {\n  GAME_WIDTH: 400,\n  GAME_HEIGHT: 600,\n  PLAYER_W: 48,\n  PLAYER_H: 48,\n  GRAVITY: 0.6,\n  FLAP_VEL: -8,\n  OBSTACLE_W: 60,\n  OBSTACLE_GAP: 180,\n  ENEMY_W: 40,\n  ENEMY_H: 40,\n  BEAM_W: 10,\n  POTION_W: 28,\n  POTION_H: 38,\n  API: \"http://localhost:8000\",\n  ENEMY_COLORS: [\"#d72631\", \"#006e90\", \"#ffb400\", \"#8f3985\", \"#4ca1af\"],\n  ENEMY_NAMES: [\"Dementor\", \"Death Eater\", \"Troll\", \"Acromantula\", \"Werewolf\"]\n};\nfunction getRandomObstacle(id) {\n  const min = 50,\n    max = CONFIG.GAME_HEIGHT - CONFIG.OBSTACLE_GAP - 50;\n  return {\n    x: CONFIG.GAME_WIDTH,\n    height: Math.floor(Math.random() * (max - min) + min),\n    id\n  };\n}\nfunction getRandomEnemy(id) {\n  const color = CONFIG.ENEMY_COLORS[Math.floor(Math.random() * CONFIG.ENEMY_COLORS.length)];\n  const type = CONFIG.ENEMY_NAMES[Math.floor(Math.random() * CONFIG.ENEMY_NAMES.length)];\n  const y = Math.floor(Math.random() * (CONFIG.GAME_HEIGHT - CONFIG.ENEMY_H - 20)) + 10;\n  return {\n    x: CONFIG.GAME_WIDTH,\n    y,\n    color,\n    type,\n    id\n  };\n}\nfunction getRandomPotion(id) {\n  const y = Math.floor(Math.random() * (CONFIG.GAME_HEIGHT - CONFIG.POTION_H - 40)) + 20;\n  return {\n    x: CONFIG.GAME_WIDTH,\n    y,\n    id\n  };\n}\nexport default function App() {\n  _s();\n  const [playerY, setPlayerY] = useState(CONFIG.GAME_HEIGHT / 2);\n  const [vel, setVel] = useState(0);\n  const [obstacles, setObstacles] = useState([getRandomObstacle(0)]);\n  const [enemies, setEnemies] = useState([]);\n  const [beams, setBeams] = useState([]);\n  const [potions, setPotions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [invincible, setInvincible] = useState(false);\n  const [invincEnd, setInvincEnd] = useState(0);\n  const [invincTimeLeft, setInvincTimeLeft] = useState(0);\n  const obstacleId = useRef(1);\n  const enemyId = useRef(1);\n  const potionId = useRef(1);\n  const playerYRef = useRef(playerY);\n\n  // Main game loop\n  useEffect(() => {\n    if (!running) return;\n    const interval = setInterval(() => {\n      setVel(v => Math.min(v + CONFIG.GRAVITY, 10));\n      setPlayerY(y => Math.max(0, Math.min(CONFIG.GAME_HEIGHT - CONFIG.PLAYER_H, y + vel)));\n      setScore(s => s + 1);\n      setObstacles(obs => {\n        let nobs = obs.map(o => ({\n          ...o,\n          x: o.x - 4\n        }));\n        if (!gameOver && (nobs.length === 0 || nobs[nobs.length - 1].x < CONFIG.GAME_WIDTH - 200)) {\n          nobs.push(getRandomObstacle(obstacleId.current++));\n        }\n        return nobs.filter(o => o.x + CONFIG.OBSTACLE_W > 0);\n      });\n      setEnemies(enms => {\n        let nenms = enms.map(e => ({\n          ...e,\n          x: e.x - 5\n        }));\n        if (Math.random() > 0.97) {\n          nenms.push(getRandomEnemy(enemyId.current++));\n        }\n        return nenms.filter(e => e.x + CONFIG.ENEMY_W > 0);\n      });\n      setBeams(bs => bs.filter(b => b.active && b.x < CONFIG.GAME_WIDTH).map(b => ({\n        ...b,\n        x: b.x + 12\n      })));\n      setPotions(ps => {\n        let nps = ps.map(p => ({\n          ...p,\n          x: p.x - 4\n        }));\n        if (Math.random() > 0.995) {\n          nps.push(getRandomPotion(potionId.current++));\n        }\n        return nps.filter(p => p.x + CONFIG.POTION_W > 0);\n      });\n    }, 24);\n    return () => clearInterval(interval);\n  }, [vel, running, gameOver]);\n\n  // Controls and prevent scroll\n  useEffect(() => {\n    if (!running) return;\n    const handler = e => {\n      if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\", \" \"].includes(e.key)) e.preventDefault();\n      if (e.code === \"Space\") setVel(CONFIG.FLAP_VEL);\n      if (e.key === \"a\" || e.key === \"A\") {\n        // Use a callback to get the current playerY value\n        setBeams(bs => [...bs, {\n          x: 30 + CONFIG.PLAYER_W,\n          y: playerY + CONFIG.PLAYER_H / 2 - 4,\n          active: true\n        }]);\n      }\n      if (e.key === \"ArrowUp\") setVel(CONFIG.FLAP_VEL);\n    };\n    window.addEventListener(\"keydown\", handler, {\n      passive: false\n    });\n    window.addEventListener(\"mousedown\", () => {\n      if (running) setVel(CONFIG.FLAP_VEL);\n    });\n    window.addEventListener(\"touchstart\", () => {\n      if (running) setVel(CONFIG.FLAP_VEL);\n    });\n    return () => {\n      window.removeEventListener(\"keydown\", handler);\n      window.removeEventListener(\"mousedown\", () => {});\n      window.removeEventListener(\"touchstart\", () => {});\n    };\n  }, [running]);\n\n  // Collision\n  useEffect(() => {\n    if (!running) return;\n    // Potion collision - separate logic to avoid infinite loops\n    let drank = false;\n    const newPotions = potions.filter(p => {\n      const overlap = 30 + CONFIG.PLAYER_W > p.x && 30 < p.x + CONFIG.POTION_W && playerY + CONFIG.PLAYER_H > p.y && playerY < p.y + CONFIG.POTION_H;\n      if (overlap) drank = true;\n      return !overlap;\n    });\n    if (drank) {\n      setInvincible(true);\n      setInvincEnd(Date.now() + 10000);\n    }\n    setPotions(newPotions);\n    if (invincible) return;\n\n    // Obstacles\n    const harryTop = playerY;\n    const harryBot = playerY + CONFIG.PLAYER_H;\n    const harryLeft = 30;\n    const harryRight = 30 + CONFIG.PLAYER_W;\n    for (const obs of obstacles) {\n      if (obs.x < harryRight && obs.x + CONFIG.OBSTACLE_W > harryLeft && (harryTop < obs.height || harryBot > obs.height + CONFIG.OBSTACLE_GAP)) {\n        setRunning(false);\n        setGameOver(true);\n      }\n    }\n    // Enemies\n    for (const enemy of enemies) {\n      if (enemy.x < harryRight && enemy.x + CONFIG.ENEMY_W > harryLeft && enemy.y < harryBot && enemy.y + CONFIG.ENEMY_H > harryTop) {\n        setRunning(false);\n        setGameOver(true);\n      }\n    }\n    // Beam to enemy collision - separate the logic to avoid infinite loops\n    const newBeams = [...beams];\n    const newEnemies = enemies.filter(enemy => {\n      let hit = false;\n      for (let i = 0; i < newBeams.length; i++) {\n        const beam = newBeams[i];\n        if (beam.active && beam.y > enemy.y && beam.y < enemy.y + CONFIG.ENEMY_H && beam.x + CONFIG.BEAM_W > enemy.x && beam.x < enemy.x + CONFIG.ENEMY_W) {\n          hit = true;\n          newBeams[i] = {\n            ...beam,\n            active: false\n          };\n          break;\n        }\n      }\n      return !hit;\n    });\n\n    // Update both beams and enemies separately\n    setBeams(newBeams);\n    setEnemies(newEnemies);\n    if (playerY <= 0 || playerY + CONFIG.PLAYER_H >= CONFIG.GAME_HEIGHT) {\n      setRunning(false);\n      setGameOver(true);\n    }\n  }, [playerY, obstacles, enemies, beams, potions, running, invincible]);\n\n  // Invincibility timer tracker\n  useEffect(() => {\n    if (!invincible) {\n      setInvincTimeLeft(0);\n      return;\n    }\n    const timer = setInterval(() => {\n      const msLeft = invincEnd - Date.now();\n      setInvincTimeLeft(Math.max(0, Math.ceil(msLeft / 1000)));\n      if (msLeft <= 0) setInvincible(false);\n    }, 100);\n    return () => clearInterval(timer);\n  }, [invincible, invincEnd]);\n  useEffect(() => {\n    fetch(`${CONFIG.API}/leaderboard`).then(res => res.json()).then(setLeaderboard).catch(() => {});\n  }, [gameOver]);\n  function startGame() {\n    setPlayerY(CONFIG.GAME_HEIGHT / 2);\n    setVel(0);\n    setObstacles([getRandomObstacle(0)]);\n    setEnemies([]);\n    setBeams([]);\n    setPotions([]);\n    setScore(0);\n    setGameOver(false);\n    setRunning(true);\n    setInvincible(false);\n    setInvincEnd(0);\n    setInvincTimeLeft(0);\n    obstacleId.current = 1;\n    enemyId.current = 1;\n    potionId.current = 1;\n  }\n  function submitScore() {\n    fetch(`${CONFIG.API}/submit`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name || \"HarryPotterFan\",\n        score\n      })\n    }).then(() => fetch(`${CONFIG.API}/leaderboard`)).then(res => res.json()).then(setLeaderboard);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"serif\",\n      background: \"#1c1746\",\n      minHeight: \"100vh\",\n      color: \"#fff\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#f3ce13\",\n        margin: 0,\n        padding: \"16px 0\",\n        fontFamily: \"Harry Potter, serif\"\n      },\n      children: \"Harry Potter: Broomstick Blitz!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), invincible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: invincTimeLeft <= 3 ? \"#ff4273\" : \"#fc3\",\n        fontWeight: \"bold\",\n        fontSize: \"22px\"\n      },\n      children: [\"Invincible! \", invincTimeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: CONFIG.GAME_WIDTH,\n      height: CONFIG.GAME_HEIGHT,\n      style: {\n        background: \"#222d45\",\n        border: \"4px solid #665f51\"\n      },\n      children: [[...Array(24)].map((_, i) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: Math.random() * CONFIG.GAME_WIDTH,\n        cy: Math.random() * CONFIG.GAME_HEIGHT,\n        r: 1.2,\n        fill: \"white\",\n        opacity: \"0.5\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)), obstacles.map(o => renderObstacle(o, CONFIG.OBSTACLE_W, CONFIG.OBSTACLE_GAP, CONFIG.GAME_HEIGHT)), potions.map(p => renderPotion(p, CONFIG.POTION_W, CONFIG.POTION_H)), enemies.map(e => renderEnemy(e, CONFIG.ENEMY_W, CONFIG.ENEMY_H)), renderBeams(beams), renderHarry(playerY, beams, CONFIG.PLAYER_W, CONFIG.PLAYER_H)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), !running && (gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          margin: 4\n        },\n        placeholder: \"Your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitScore,\n        children: \"Submit Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: leaderboard.map((entry, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.name, \": \", entry.score]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Space/click/tap to flap \\xB7 \\\"A\\\" to cast spell \\xB7 Dodge obstacles/monsters! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 82\n      }, this), \" Drink the magical potion for temporary invincibility.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b2bP4gUJVEbRAhD32MQ4v0xYsAQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","renderHarry","renderObstacle","renderEnemy","renderBeams","renderPotion","jsxDEV","_jsxDEV","CONFIG","GAME_WIDTH","GAME_HEIGHT","PLAYER_W","PLAYER_H","GRAVITY","FLAP_VEL","OBSTACLE_W","OBSTACLE_GAP","ENEMY_W","ENEMY_H","BEAM_W","POTION_W","POTION_H","API","ENEMY_COLORS","ENEMY_NAMES","getRandomObstacle","id","min","max","x","height","Math","floor","random","getRandomEnemy","color","length","type","y","getRandomPotion","App","_s","playerY","setPlayerY","vel","setVel","obstacles","setObstacles","enemies","setEnemies","beams","setBeams","potions","setPotions","score","setScore","running","setRunning","gameOver","setGameOver","name","setName","leaderboard","setLeaderboard","invincible","setInvincible","invincEnd","setInvincEnd","invincTimeLeft","setInvincTimeLeft","obstacleId","enemyId","potionId","playerYRef","interval","setInterval","v","s","obs","nobs","map","o","push","current","filter","enms","nenms","e","bs","b","active","ps","nps","p","clearInterval","handler","includes","key","preventDefault","code","window","addEventListener","passive","removeEventListener","drank","newPotions","overlap","Date","now","harryTop","harryBot","harryLeft","harryRight","enemy","newBeams","newEnemies","hit","i","beam","timer","msLeft","ceil","fetch","then","res","json","catch","startGame","submitScore","method","headers","body","JSON","stringify","style","textAlign","fontFamily","background","minHeight","children","margin","padding","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","fontSize","width","border","Array","_","cx","cy","r","fill","opacity","placeholder","value","onChange","target","onClick","entry","_c","$RefreshReg$"],"sources":["/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport { renderHarry, renderObstacle, renderEnemy, renderBeams, renderPotion } from \"./GameEntities\";\n\nconst CONFIG = {\n  GAME_WIDTH: 400,\n  GAME_HEIGHT: 600,\n  PLAYER_W: 48,\n  PLAYER_H: 48,\n  GRAVITY: 0.6,\n  FLAP_VEL: -8,\n  OBSTACLE_W: 60,\n  OBSTACLE_GAP: 180,\n  ENEMY_W: 40,\n  ENEMY_H: 40,\n  BEAM_W: 10,\n  POTION_W: 28,\n  POTION_H: 38,\n  API: \"http://localhost:8000\",\n  ENEMY_COLORS: [\"#d72631\", \"#006e90\", \"#ffb400\", \"#8f3985\", \"#4ca1af\"],\n  ENEMY_NAMES: [\"Dementor\", \"Death Eater\", \"Troll\", \"Acromantula\", \"Werewolf\"],\n};\n\ntype Obstacle = { x: number; height: number; id: number };\ntype Enemy = { x: number; y: number; color: string; type: string; id: number };\ntype Potion = { x: number; y: number; id: number };\ntype Beam = { x: number; y: number; active: boolean };\ntype ScoreEntry = { name: string; score: number };\n\nfunction getRandomObstacle(id: number): Obstacle {\n  const min = 50,\n    max = CONFIG.GAME_HEIGHT - CONFIG.OBSTACLE_GAP - 50;\n  return { x: CONFIG.GAME_WIDTH, height: Math.floor(Math.random() * (max - min) + min), id };\n}\nfunction getRandomEnemy(id: number): Enemy {\n  const color = CONFIG.ENEMY_COLORS[Math.floor(Math.random() * CONFIG.ENEMY_COLORS.length)];\n  const type = CONFIG.ENEMY_NAMES[Math.floor(Math.random() * CONFIG.ENEMY_NAMES.length)];\n  const y = Math.floor(Math.random() * (CONFIG.GAME_HEIGHT - CONFIG.ENEMY_H - 20)) + 10;\n  return { x: CONFIG.GAME_WIDTH, y, color, type, id };\n}\nfunction getRandomPotion(id: number): Potion {\n  const y = Math.floor(Math.random() * (CONFIG.GAME_HEIGHT - CONFIG.POTION_H - 40)) + 20;\n  return { x: CONFIG.GAME_WIDTH, y, id };\n}\n\nexport default function App() {\n  const [playerY, setPlayerY] = useState(CONFIG.GAME_HEIGHT / 2);\n  const [vel, setVel] = useState(0);\n  const [obstacles, setObstacles] = useState<Obstacle[]>([getRandomObstacle(0)]);\n  const [enemies, setEnemies] = useState<Enemy[]>([]);\n  const [beams, setBeams] = useState<Beam[]>([]);\n  const [potions, setPotions] = useState<Potion[]>([]);\n  const [score, setScore] = useState(0);\n  const [running, setRunning] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [leaderboard, setLeaderboard] = useState<ScoreEntry[]>([]);\n  const [invincible, setInvincible] = useState(false);\n  const [invincEnd, setInvincEnd] = useState(0);\n  const [invincTimeLeft, setInvincTimeLeft] = useState(0);\n\n  const obstacleId = useRef(1);\n  const enemyId = useRef(1);\n  const potionId = useRef(1);\n  const playerYRef = useRef(playerY);\n\n  // Main game loop\n  useEffect(() => {\n    if (!running) return;\n    const interval = setInterval(() => {\n      setVel((v) => Math.min(v + CONFIG.GRAVITY, 10));\n      setPlayerY((y) => Math.max(0, Math.min(CONFIG.GAME_HEIGHT - CONFIG.PLAYER_H, y + vel)));\n      setScore((s) => s + 1);\n\n      setObstacles((obs) => {\n        let nobs = obs.map((o) => ({ ...o, x: o.x - 4 }));\n        if (!gameOver && (nobs.length === 0 || nobs[nobs.length - 1].x < CONFIG.GAME_WIDTH - 200)) {\n          nobs.push(getRandomObstacle(obstacleId.current++));\n        }\n        return nobs.filter((o) => o.x + CONFIG.OBSTACLE_W > 0);\n      });\n\n      setEnemies((enms) => {\n        let nenms = enms.map((e) => ({ ...e, x: e.x - 5 }));\n        if (Math.random() > 0.97) {\n          nenms.push(getRandomEnemy(enemyId.current++));\n        }\n        return nenms.filter((e) => e.x + CONFIG.ENEMY_W > 0);\n      });\n\n      setBeams((bs) =>\n        bs.filter((b) => b.active && b.x < CONFIG.GAME_WIDTH).map((b) => ({ ...b, x: b.x + 12 }))\n      );\n\n      setPotions((ps) => {\n        let nps = ps.map((p) => ({ ...p, x: p.x - 4 }));\n        if (Math.random() > 0.995) {\n          nps.push(getRandomPotion(potionId.current++));\n        }\n        return nps.filter((p) => p.x + CONFIG.POTION_W > 0);\n      });\n    }, 24);\n    return () => clearInterval(interval);\n  }, [vel, running, gameOver]);\n\n  // Controls and prevent scroll\n  useEffect(() => {\n    if (!running) return;\n    const handler = (e: KeyboardEvent) => {\n      if ([\"ArrowLeft\", \"ArrowRight\", \"ArrowUp\", \"ArrowDown\", \" \"].includes(e.key)) e.preventDefault();\n      if (e.code === \"Space\") setVel(CONFIG.FLAP_VEL);\n      if (e.key === \"a\" || e.key === \"A\") {\n        // Use a callback to get the current playerY value\n        setBeams((bs) => [...bs, { x: 30 + CONFIG.PLAYER_W, y: playerY + CONFIG.PLAYER_H / 2 - 4, active: true }]);\n      }\n      if (e.key === \"ArrowUp\") setVel(CONFIG.FLAP_VEL);\n    };\n    window.addEventListener(\"keydown\", handler, { passive: false });\n    window.addEventListener(\"mousedown\", () => { if (running) setVel(CONFIG.FLAP_VEL); });\n    window.addEventListener(\"touchstart\", () => { if (running) setVel(CONFIG.FLAP_VEL); });\n    return () => {\n      window.removeEventListener(\"keydown\", handler);\n      window.removeEventListener(\"mousedown\", () => {});\n      window.removeEventListener(\"touchstart\", () => {});\n    };\n  }, [running]);\n\n  // Collision\n  useEffect(() => {\n    if (!running) return;\n     // Potion collision - separate logic to avoid infinite loops\n     let drank = false;\n     const newPotions = potions.filter((p) => {\n       const overlap =\n         30 + CONFIG.PLAYER_W > p.x &&\n         30 < p.x + CONFIG.POTION_W &&\n         playerY + CONFIG.PLAYER_H > p.y &&\n         playerY < p.y + CONFIG.POTION_H;\n       if (overlap) drank = true;\n       return !overlap;\n     });\n     \n     if (drank) {\n       setInvincible(true);\n       setInvincEnd(Date.now() + 10000);\n     }\n     \n     setPotions(newPotions);\n\n    if (invincible) return;\n\n    // Obstacles\n    const harryTop = playerY;\n    const harryBot = playerY + CONFIG.PLAYER_H;\n    const harryLeft = 30;\n    const harryRight = 30 + CONFIG.PLAYER_W;\n    for (const obs of obstacles) {\n      if (\n        obs.x < harryRight &&\n        obs.x + CONFIG.OBSTACLE_W > harryLeft &&\n        (harryTop < obs.height || harryBot > obs.height + CONFIG.OBSTACLE_GAP)\n      ) {\n        setRunning(false);\n        setGameOver(true);\n      }\n    }\n    // Enemies\n    for (const enemy of enemies) {\n      if (\n        enemy.x < harryRight &&\n        enemy.x + CONFIG.ENEMY_W > harryLeft &&\n        enemy.y < harryBot &&\n        enemy.y + CONFIG.ENEMY_H > harryTop\n      ) {\n        setRunning(false);\n        setGameOver(true);\n      }\n    }\n     // Beam to enemy collision - separate the logic to avoid infinite loops\n     const newBeams = [...beams];\n     const newEnemies = enemies.filter((enemy) => {\n       let hit = false;\n       for (let i = 0; i < newBeams.length; i++) {\n         const beam = newBeams[i];\n         if (\n           beam.active &&\n           beam.y > enemy.y &&\n           beam.y < enemy.y + CONFIG.ENEMY_H &&\n           beam.x + CONFIG.BEAM_W > enemy.x &&\n           beam.x < enemy.x + CONFIG.ENEMY_W\n         ) {\n           hit = true;\n           newBeams[i] = { ...beam, active: false };\n           break;\n         }\n       }\n       return !hit;\n     });\n     \n     // Update both beams and enemies separately\n     setBeams(newBeams);\n     setEnemies(newEnemies);\n\n    if (playerY <= 0 || playerY + CONFIG.PLAYER_H >= CONFIG.GAME_HEIGHT) {\n      setRunning(false);\n      setGameOver(true);\n    }\n  }, [playerY, obstacles, enemies, beams, potions, running, invincible]);\n\n  // Invincibility timer tracker\n  useEffect(() => {\n    if (!invincible) {\n      setInvincTimeLeft(0);\n      return;\n    }\n    const timer = setInterval(() => {\n      const msLeft = invincEnd - Date.now();\n      setInvincTimeLeft(Math.max(0, Math.ceil(msLeft / 1000)));\n      if (msLeft <= 0) setInvincible(false);\n    }, 100);\n    return () => clearInterval(timer);\n  }, [invincible, invincEnd]);\n\n  useEffect(() => {\n    fetch(`${CONFIG.API}/leaderboard`)\n      .then((res) => res.json())\n      .then(setLeaderboard)\n      .catch(() => {});\n  }, [gameOver]);\n\n  function startGame() {\n    setPlayerY(CONFIG.GAME_HEIGHT / 2); setVel(0);\n    setObstacles([getRandomObstacle(0)]); setEnemies([]); setBeams([]); setPotions([]);\n    setScore(0); setGameOver(false); setRunning(true);\n    setInvincible(false); setInvincEnd(0); setInvincTimeLeft(0);\n    obstacleId.current = 1; enemyId.current = 1; potionId.current = 1;\n  }\n  function submitScore() {\n    fetch(`${CONFIG.API}/submit`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ name: name || \"HarryPotterFan\", score }),\n    })\n      .then(() => fetch(`${CONFIG.API}/leaderboard`))\n      .then((res) => res.json())\n      .then(setLeaderboard);\n  }\n\n  return (\n    <div style={{ textAlign: \"center\", fontFamily: \"serif\", background: \"#1c1746\", minHeight: \"100vh\", color: \"#fff\" }}>\n      <h2 style={{ color: \"#f3ce13\", margin: 0, padding: \"16px 0\", fontFamily: \"Harry Potter, serif\" }}>\n        Harry Potter: Broomstick Blitz!\n      </h2>\n      {invincible && (\n        <div style={{\n          color: invincTimeLeft <= 3 ? \"#ff4273\" : \"#fc3\",\n          fontWeight: \"bold\",\n          fontSize: \"22px\"\n        }}>\n          Invincible! {invincTimeLeft}s\n        </div>\n      )}\n      <svg width={CONFIG.GAME_WIDTH} height={CONFIG.GAME_HEIGHT} style={{ background: \"#222d45\", border: \"4px solid #665f51\" }}>\n        {[...Array(24)].map((_, i) => (\n          <circle key={i} cx={Math.random()*CONFIG.GAME_WIDTH} cy={Math.random()*CONFIG.GAME_HEIGHT} r={1.2} fill=\"white\" opacity=\"0.5\"/>\n        ))}\n        {obstacles.map(o => renderObstacle(o, CONFIG.OBSTACLE_W, CONFIG.OBSTACLE_GAP, CONFIG.GAME_HEIGHT))}\n        {potions.map(p => renderPotion(p, CONFIG.POTION_W, CONFIG.POTION_H))}\n        {enemies.map(e => renderEnemy(e, CONFIG.ENEMY_W, CONFIG.ENEMY_H))}\n         {renderBeams(beams)}\n        {renderHarry(playerY, beams, CONFIG.PLAYER_W, CONFIG.PLAYER_H)}\n      </svg>\n      <div>Score: {score}</div>\n      {!running && (gameOver ? (\n        <div>\n          <b>Game Over!</b><br />\n          <input style={{ margin: 4 }} placeholder=\"Your name\" value={name} onChange={e => setName(e.target.value)} />\n          <button onClick={submitScore}>Submit Score</button>\n          <button onClick={startGame}>Restart</button>\n        </div>\n      ) : (\n        <button onClick={startGame}>Start Game</button>\n      ))}\n      <h3>Leaderboard</h3>\n      <ol>{leaderboard.map((entry, i) => (\n        <li key={i}>{entry.name}: {entry.score}</li>\n      ))}</ol>\n      <p>Space/click/tap to flap · \"A\" to cast spell · Dodge obstacles/monsters! <br /> Drink the magical potion for temporary invincibility.</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}