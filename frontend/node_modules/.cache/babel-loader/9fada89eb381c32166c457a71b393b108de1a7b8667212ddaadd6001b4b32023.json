{"ast":null,"code":"var _jsxFileName = \"/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WIDTH = 400;\nconst HEIGHT = 600;\nconst PLAYER_W = 40;\nconst PLAYER_H = 40;\nconst OBSTACLE_W = 40;\nconst OBSTACLE_H = 40;\nconst API = \"http://localhost:5000/api\";\nconst GAME_DURATION_MS = 600000; // 10 minutes\n\nfunction getRandomX() {\n  return Math.floor(Math.random() * (WIDTH - OBSTACLE_W));\n}\nfunction App() {\n  _s();\n  const canvasRef = useRef(null);\n  const [x, setX] = useState(WIDTH / 2 - PLAYER_W / 2);\n  const [y, setY] = useState(HEIGHT - PLAYER_H);\n  const [score, setScore] = useState(0);\n  const [obstacles, setObstacles] = useState([{\n    x: getRandomX(),\n    y: 0\n  }]);\n  const [running, setRunning] = useState(true);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [name, setName] = useState(\"\");\n  const gameStartTimeRef = useRef(Date.now());\n  const dragStartX = useRef(null);\n\n  // Keyboard controls\n  useEffect(() => {\n    const handler = e => {\n      if (!running) return;\n      if (e.key === \"ArrowLeft\") setX(x => Math.max(0, x - 24));\n      if (e.key === \"ArrowRight\") setX(x => Math.min(WIDTH - PLAYER_W, x + 24));\n    };\n    window.addEventListener(\"keydown\", handler);\n    return () => window.removeEventListener(\"keydown\", handler);\n  }, [running]);\n\n  // Mouse & touch controls\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const handleMouseDown = e => {\n      if (!running) return;\n      dragStartX.current = e.clientX;\n    };\n    const handleMouseMove = e => {\n      if (!running) return;\n      if (dragStartX.current !== null) {\n        const dx = e.clientX - dragStartX.current;\n        setX(x => Math.max(0, Math.min(WIDTH - PLAYER_W, x + dx)));\n        dragStartX.current = e.clientX;\n      }\n    };\n    const handleMouseUp = () => {\n      dragStartX.current = null;\n    };\n    const handleTouchStart = e => {\n      if (!running) return;\n      dragStartX.current = e.touches[0].clientX;\n    };\n    const handleTouchMove = e => {\n      if (!running) return;\n      if (dragStartX.current !== null) {\n        const dx = e.touches[0].clientX - dragStartX.current;\n        setX(x => Math.max(0, Math.min(WIDTH - PLAYER_W, x + dx)));\n        dragStartX.current = e.touches[0].clientX;\n      }\n    };\n    const handleTouchEnd = () => {\n      dragStartX.current = null;\n    };\n    const canvas = canvasRef.current;\n    canvas.addEventListener(\"mousedown\", handleMouseDown);\n    canvas.addEventListener(\"mousemove\", handleMouseMove);\n    canvas.addEventListener(\"mouseup\", handleMouseUp);\n    canvas.addEventListener(\"mouseleave\", handleMouseUp);\n    canvas.addEventListener(\"touchstart\", handleTouchStart);\n    canvas.addEventListener(\"touchmove\", handleTouchMove);\n    canvas.addEventListener(\"touchend\", handleTouchEnd);\n    return () => {\n      canvas.removeEventListener(\"mousedown\", handleMouseDown);\n      canvas.removeEventListener(\"mousemove\", handleMouseMove);\n      canvas.removeEventListener(\"mouseup\", handleMouseUp);\n      canvas.removeEventListener(\"mouseleave\", handleMouseUp);\n      canvas.removeEventListener(\"touchstart\", handleTouchStart);\n      canvas.removeEventListener(\"touchmove\", handleTouchMove);\n      canvas.removeEventListener(\"touchend\", handleTouchEnd);\n    };\n  }, [running]);\n\n  // Game loop (same as previous version)\n  useEffect(() => {\n    if (!running) return;\n    gameStartTimeRef.current = Date.now();\n    const interval = setInterval(() => {\n      setObstacles(obs => {\n        let hit = false;\n        const next = obs.map(o => ({\n          ...o,\n          y: o.y + 8\n        }));\n        const survived = [];\n        for (let o of next) {\n          // Check if bounding boxes overlap in both x and y dimensions\n          const collided = o.x < x + PLAYER_W && o.x + OBSTACLE_W > x && o.y < y + PLAYER_H && o.y + OBSTACLE_H > y;\n          if (collided) hit = true;else if (o.y < HEIGHT) survived.push(o);\n        }\n        if (hit) {\n          setRunning(false);\n          return obs;\n        }\n        const spawnChance = Math.random();\n        if (survived.length === 0 || survived.length < 3 && spawnChance > 0.7) {\n          survived.push({\n            x: getRandomX(),\n            y: 0\n          });\n        }\n        setScore(s => s + 1);\n        return survived;\n      });\n      if (Date.now() - gameStartTimeRef.current > GAME_DURATION_MS) setRunning(false);\n    }, 36);\n    return () => clearInterval(interval);\n  }, [x, running]);\n\n  // Drawing, leaderboard, restart, score submissionâ€”same as previous version\n\n  useEffect(() => {\n    var _canvasRef$current;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext(\"2d\");\n    if (!ctx) return;\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    ctx.fillStyle = \"blue\";\n    ctx.fillRect(x, HEIGHT - PLAYER_H, PLAYER_W, PLAYER_H);\n    ctx.fillStyle = \"red\";\n    obstacles.forEach(o => ctx.fillRect(o.x, o.y, OBSTACLE_W, OBSTACLE_H));\n    ctx.fillStyle = \"#222\";\n    ctx.fillText(`Score: ${score}`, 10, 24);\n    if (!running) {\n      ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n      ctx.fillStyle = \"#fff\";\n      ctx.font = \"32px sans-serif\";\n      ctx.fillText(\"Game Over\", WIDTH / 2 - 78, HEIGHT / 2);\n    }\n  });\n  useEffect(() => {\n    fetch(`${API}/leaderboard`).then(res => res.json()).then(data => setLeaderboard(data));\n  }, [running]);\n  const restart = () => {\n    setX(WIDTH / 2 - PLAYER_W / 2);\n    setObstacles([{\n      x: getRandomX(),\n      y: 0\n    }]);\n    setScore(0);\n    setRunning(true);\n    gameStartTimeRef.current = Date.now();\n  };\n  const submitScore = () => {\n    fetch(`${API}/submit`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name || \"Anonymous\",\n        score\n      })\n    }).then(() => {\n      fetch(`${API}/leaderboard`).then(res => res.json()).then(data => setLeaderboard(data));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Endless Runner Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: WIDTH,\n      height: HEIGHT,\n      style: {\n        border: \"2px solid #888\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Score: \", score, \" \", running ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), !running && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Your name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitScore,\n        children: \"Submit Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: restart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: leaderboard.map((entry, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [entry.name, \": \", entry.score]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Move the player with arrow keys, mouse drag, or swipe.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 71\n      }, this), \"Dodge red blocks for up to 10 minutes and submit your score!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"gYKTNpL1xKMixLPaZBFQwGVTmW0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","WIDTH","HEIGHT","PLAYER_W","PLAYER_H","OBSTACLE_W","OBSTACLE_H","API","GAME_DURATION_MS","getRandomX","Math","floor","random","App","_s","canvasRef","x","setX","y","setY","score","setScore","obstacles","setObstacles","running","setRunning","leaderboard","setLeaderboard","name","setName","gameStartTimeRef","Date","now","dragStartX","handler","e","key","max","min","window","addEventListener","removeEventListener","current","handleMouseDown","clientX","handleMouseMove","dx","handleMouseUp","handleTouchStart","touches","handleTouchMove","handleTouchEnd","canvas","interval","setInterval","obs","hit","next","map","o","survived","collided","push","spawnChance","length","s","clearInterval","_canvasRef$current","ctx","getContext","clearRect","fillStyle","fillRect","forEach","fillText","font","fetch","then","res","json","data","restart","submitScore","method","headers","body","JSON","stringify","style","textAlign","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","width","height","border","placeholder","value","onChange","target","onClick","entry","i","_c","$RefreshReg$"],"sources":["/Users/sarathvallabhaneni/Desktop/sarath-game/frontend/src/App.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst WIDTH = 400;\nconst HEIGHT = 600;\nconst PLAYER_W = 40;\nconst PLAYER_H = 40;\nconst OBSTACLE_W = 40;\nconst OBSTACLE_H = 40;\nconst API = \"http://localhost:5000/api\";\nconst GAME_DURATION_MS = 600000; // 10 minutes\n\ntype ScoreEntry = { name: string; score: number };\n\nfunction getRandomX() {\n    return Math.floor(Math.random() * (WIDTH - OBSTACLE_W));\n}\n\nfunction App() {\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    const [x, setX] = useState(WIDTH / 2 - PLAYER_W / 2);\n    const [y, setY] = useState(HEIGHT - PLAYER_H);\n    const [score, setScore] = useState(0);\n    const [obstacles, setObstacles] = useState([{ x: getRandomX(), y: 0 }]);\n    const [running, setRunning] = useState(true);\n    const [leaderboard, setLeaderboard] = useState<ScoreEntry[]>([]);\n    const [name, setName] = useState(\"\");\n    const gameStartTimeRef = useRef<number>(Date.now());\n    const dragStartX = useRef<number | null>(null);\n\n    // Keyboard controls\n    useEffect(() => {\n        const handler = (e: KeyboardEvent) => {\n            if (!running) return;\n            if (e.key === \"ArrowLeft\") setX(x => Math.max(0, x - 24));\n            if (e.key === \"ArrowRight\") setX(x => Math.min(WIDTH - PLAYER_W, x + 24));\n        };\n        window.addEventListener(\"keydown\", handler);\n        return () => window.removeEventListener(\"keydown\", handler);\n    }, [running]);\n\n    // Mouse & touch controls\n    useEffect(() => {\n        if (!canvasRef.current) return;\n\n        const handleMouseDown = (e: MouseEvent) => {\n            if (!running) return;\n            dragStartX.current = e.clientX;\n        };\n        const handleMouseMove = (e: MouseEvent) => {\n            if (!running) return;\n            if (dragStartX.current !== null) {\n                const dx = e.clientX - dragStartX.current;\n                setX(x =>\n                    Math.max(0, Math.min(WIDTH - PLAYER_W, x + dx))\n                );\n                dragStartX.current = e.clientX;\n            }\n        };\n        const handleMouseUp = () => {\n            dragStartX.current = null;\n        };\n\n        const handleTouchStart = (e: TouchEvent) => {\n            if (!running) return;\n            dragStartX.current = e.touches[0].clientX;\n        };\n        const handleTouchMove = (e: TouchEvent) => {\n            if (!running) return;\n            if (dragStartX.current !== null) {\n                const dx = e.touches[0].clientX - dragStartX.current;\n                setX(x =>\n                    Math.max(0, Math.min(WIDTH - PLAYER_W, x + dx))\n                );\n                dragStartX.current = e.touches[0].clientX;\n            }\n        };\n        const handleTouchEnd = () => {\n            dragStartX.current = null;\n        };\n\n        const canvas = canvasRef.current;\n        canvas.addEventListener(\"mousedown\", handleMouseDown);\n        canvas.addEventListener(\"mousemove\", handleMouseMove);\n        canvas.addEventListener(\"mouseup\", handleMouseUp);\n        canvas.addEventListener(\"mouseleave\", handleMouseUp);\n        canvas.addEventListener(\"touchstart\", handleTouchStart);\n        canvas.addEventListener(\"touchmove\", handleTouchMove);\n        canvas.addEventListener(\"touchend\", handleTouchEnd);\n\n        return () => {\n            canvas.removeEventListener(\"mousedown\", handleMouseDown);\n            canvas.removeEventListener(\"mousemove\", handleMouseMove);\n            canvas.removeEventListener(\"mouseup\", handleMouseUp);\n            canvas.removeEventListener(\"mouseleave\", handleMouseUp);\n            canvas.removeEventListener(\"touchstart\", handleTouchStart);\n            canvas.removeEventListener(\"touchmove\", handleTouchMove);\n            canvas.removeEventListener(\"touchend\", handleTouchEnd);\n        };\n    }, [running]);\n\n    // Game loop (same as previous version)\n    useEffect(() => {\n        if (!running) return;\n        gameStartTimeRef.current = Date.now();\n        const interval = setInterval(() => {\n            setObstacles(obs => {\n                let hit = false;\n                const next = obs.map(o => ({ ...o, y: o.y + 8 }));\n                const survived = [];\n                for (let o of next) {\n                    // Check if bounding boxes overlap in both x and y dimensions\n                    const collided =\n                        o.x < x + PLAYER_W &&\n                        o.x + OBSTACLE_W > x &&\n                        o.y < y + PLAYER_H &&\n                        o.y + OBSTACLE_H > y;\n                    if (collided) hit = true;\n                    else if (o.y < HEIGHT) survived.push(o);\n                }\n                if (hit) {\n                    setRunning(false);\n                    return obs;\n                }\n                const spawnChance = Math.random();\n                if (\n                    survived.length === 0 ||\n                    (survived.length < 3 && spawnChance > 0.7)\n                ) {\n                    survived.push({ x: getRandomX(), y: 0 });\n                }\n                setScore(s => s + 1);\n                return survived;\n            });\n            if (Date.now() - gameStartTimeRef.current > GAME_DURATION_MS) setRunning(false);\n        }, 36);\n        return () => clearInterval(interval);\n    }, [x, running]);\n\n    // Drawing, leaderboard, restart, score submissionâ€”same as previous version\n\n    useEffect(() => {\n        const ctx = canvasRef.current?.getContext(\"2d\");\n        if (!ctx) return;\n        ctx.clearRect(0, 0, WIDTH, HEIGHT);\n        ctx.fillStyle = \"blue\";\n        ctx.fillRect(x, HEIGHT - PLAYER_H, PLAYER_W, PLAYER_H);\n        ctx.fillStyle = \"red\";\n        obstacles.forEach(o => ctx.fillRect(o.x, o.y, OBSTACLE_W, OBSTACLE_H));\n        ctx.fillStyle = \"#222\";\n        ctx.fillText(`Score: ${score}`, 10, 24);\n\n        if (!running) {\n            ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n            ctx.fillRect(0, 0, WIDTH, HEIGHT);\n            ctx.fillStyle = \"#fff\";\n            ctx.font = \"32px sans-serif\";\n            ctx.fillText(\"Game Over\", WIDTH / 2 - 78, HEIGHT / 2);\n        }\n    });\n\n    useEffect(() => {\n        fetch(`${API}/leaderboard`)\n            .then(res => res.json())\n            .then(data => setLeaderboard(data));\n    }, [running]);\n\n    const restart = () => {\n        setX(WIDTH / 2 - PLAYER_W / 2);\n        setObstacles([{ x: getRandomX(), y: 0 }]);\n        setScore(0);\n        setRunning(true);\n        gameStartTimeRef.current = Date.now();\n    };\n\n    const submitScore = () => {\n        fetch(`${API}/submit`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name: name || \"Anonymous\", score }),\n        }).then(() => {\n            fetch(`${API}/leaderboard`)\n                .then(res => res.json())\n                .then(data => setLeaderboard(data));\n        });\n    };\n\n    return (\n        <div style={{ textAlign: \"center\", fontFamily: \"sans-serif\" }}>\n            <h2>Endless Runner Leaderboard</h2>\n            <canvas ref={canvasRef} width={WIDTH} height={HEIGHT} style={{ border: \"2px solid #888\" }} />\n            <div>\n                Score: {score} {running ? null : <span>Game Over!</span>}\n            </div>\n            {!running && (\n                <div>\n                    <input placeholder=\"Your name\" value={name} onChange={e => setName(e.target.value)} />\n                    <button onClick={submitScore}>Submit Score</button>\n                    <button onClick={restart}>Restart</button>\n                </div>\n            )}\n            <h3>Leaderboard</h3>\n            <ol>\n                {leaderboard.map((entry, i) => (\n                    <li key={i}>{entry.name}: {entry.score}</li>\n                ))}\n            </ol>\n            <p>\n                Move the player with arrow keys, mouse drag, or swipe.<br />\n                Dodge red blocks for up to 10 minutes and submit your score!\n            </p>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}